import{_ as c}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as t,a as s,d as p,f as e,b as n,r as l}from"./app.b11470be.js";const r="/assets/image-20220602181033266.84746c40.png",d="/assets/image-20220602185634561.2d2ccbb9.png",i="/assets/image-20220602225112266.1d97721e.png",u="/assets/image-20220602224938100.576c6ccd.png",k="/assets/image-20220602225200053.dcd4b3b5.png",Q="/assets/image-20220602225226508.7cc42e68.png",m="/assets/image-20220602225246364.74d72eeb.png",T="/assets/image-20220602200631559.8d484ba5.png",v="/assets/image-20220602200815209.03e262fd.png",h="/assets/image-20220602202051320.07c3fc20.png",g="/assets/image-20220602203300776.3b934550.png",b="/assets/image-20220602203738759.1dfa4fec.png",_="/assets/image-20220602204050164.c24ed34a.png",w="/assets/image-20220602212130607.aed26236.png",q="/assets/image-20220602220550763.634d56fb.png",y={},f=e('<h2 id="\u5B9E\u9A8C\u4EFB\u52A1\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9A8C\u4EFB\u52A1\u9898\u76EE" aria-hidden="true">#</a> \u5B9E\u9A8C\u4EFB\u52A1\u9898\u76EE</h2><p>\u7528VHDL\u8BED\u8A00\u5B9E\u73B0\u4E00\u4E2A\u5E26\u590D\u4F4D\u529F\u80FD\u7684\u4E09\u4F4D\u968F\u673A\u6570\u4EA7\u751F\u548C\u663E\u793A\u7535\u8DEF\uFF0C\u5177\u4F53\u529F\u80FD\u5982\u4E0B\uFF1A</p><ul><li><p>\u5728\u6570\u7801\u7BA1 DISP7-DISP3 \u4E0A\u7A33\u5B9A\u663E\u793A\u73ED\u7EA7\u548C\u73ED\u5185\u5E8F\u53F7\uFF0C\u5982\uFF1A 201 \u73ED 1\u53F7\u540C\u5B66\u663E\u793A\u201C20101\u201D\uFF1B\u540C\u65F6\u5728\u6570\u7801\u7BA1 DISP2-DISP0 \u4E0A\u663E\u793A\u4E09\u4F4D\u968F\u673A\u6570\uFF0C\u663E\u793A\u7684\u968F\u673A\u6570\u5185\u5BB9\u6BCF2\u79D2\u53D8\u6362\u4E00\u6B21\uFF1B</p></li><li><p>\u4E00\u4E2ABTN\u7528\u4F5C\u590D\u4F4D\u952E\uFF0C\u6309\u52A8\u590D\u4F4D\u952E\u540E\uFF0C\u6570\u7801\u7BA1 DISP2-DISP0\u663E\u793A\u4E3A\u201C000\u201D\uFF0C2\u79D2\u540E\u518D\u6B21\u8FDB\u5165\u968F\u673A\u6570\u663E\u793A\u548C2\u79D2\u5207\u6362\u7684\u6A21\u5F0F\uFF0C \u800CDISP7-DISP3 \u4E0A\u663E\u793A\u7684\u5185\u5BB9\u4E0D\u53D8\u3002</p></li><li><p>\u8F93\u5165\u65F6\u949F1MHz\u3002</p></li></ul><p>\u6CE8\u610F\uFF1A\u6BCF\u6B21\u6E05\u96F6\u540E\u91CD\u65B0\u5F00\u59CB\u663E\u793A\u7684\u968F\u673A\u6570\u4E0D\u80FD\u4E0E\u4E0A\u6B21\u6E05\u96F6\u540E\u7684\u968F\u673A\u6570\u76F8\u540C\u3002</p><h2 id="\u5BF9\u5B9E\u9A8C\u4EFB\u52A1\u7684\u7406\u89E3\u4E0E\u601D\u8003" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u5B9E\u9A8C\u4EFB\u52A1\u7684\u7406\u89E3\u4E0E\u601D\u8003" aria-hidden="true">#</a> \u5BF9\u5B9E\u9A8C\u4EFB\u52A1\u7684\u7406\u89E3\u4E0E\u601D\u8003</h2><blockquote><p><strong>\u5173\u4E8E\u968F\u673A\u548C\u4F2A\u968F\u673A</strong></p><ul><li>\u5355\u7EAF\u7684\u6570\u5B66\u7B97\u6CD5\u53EA\u80FD\u4EA7\u751F\u4F2A\u968F\u673A\u6570 <ul><li>\u5229\u7528<strong>M\u5E8F\u5217\u53D1\u751F\u5668</strong>\u4EA7\u751F\u4F2A\u968F\u673A\u6570</li></ul></li><li>\u8981\u4EA7\u751F\u771F\u968F\u673A\u6570\uFF0C\u5FC5\u987B\u8981\u6709<strong>\u7269\u7406\u968F\u673A\u6E90</strong>\u7684\u53C2\u4E0E <ul><li>\u4E24\u6B21\u6309\u952E\u4E4B\u95F4\u7684\u65F6\u95F4\u95F4\u9694</li><li>\u6309\u952E\u88AB\u6309\u4E0B\u7684\u5BBD\u5EA6\u6216\u6296\u52A8\u7684\u5BBD\u5EA6</li></ul></li></ul></blockquote><h3 id="m\u5E8F\u5217\u4EA7\u751F\u4F2A\u968F\u673A\u6570" tabindex="-1"><a class="header-anchor" href="#m\u5E8F\u5217\u4EA7\u751F\u4F2A\u968F\u673A\u6570" aria-hidden="true">#</a> M\u5E8F\u5217\u4EA7\u751F\u4F2A\u968F\u673A\u6570</h3><p>M\u5E8F\u5217\u7684\u957F\u5EA6M=2<sup>k</sup>-1,\u5176\u4E2Dk\u662F\u79FB\u5B58\u5668\u7684\u4F4D\u6570\u3002</p><p>\u53CD\u9988\u7535\u8DEF\u662F\u67D0\u4E9B\u89E6\u53D1\u5668\u8F93\u51FA\u7684<strong>\u5F02\u6216</strong>\u52A0\u4E0A\u6821\u6B63\u9879\uFF0C\u6821\u6B63\u9879\u662F\u5148\u5C06k\u4E2A\u89E6\u53D1\u5668\u7684\u8F93\u51FA\u201C<strong>\u6216\u975E</strong>\u201D\uFF0C\u518D\u5C06\u8FD9\u4E2A\u6216\u975E\u7ED3\u679C\u548C\u539F\u6765\u7684\u53CD\u9988\u8F93\u51FA\u518D\u6B21\u8FDB\u884C\u201C\u5F02\u6216\u201D\u8FD0\u7B97:</p>',9),V={class:"MathJax",jax:"SVG",display:"true"},H={style:{"vertical-align":"-0.471ex"},xmlns:"http://www.w3.org/2000/svg",width:"45.56ex",height:"2.781ex",role:"img",focusable:"false",viewBox:"0 -1021 20137.7 1229"},M=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mn" transform="translate(861,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1542.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(2598.1,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mn" transform="translate(861,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(4084.9,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="mover" transform="translate(5085.1,0)"><g data-mml-node="mrow"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="TeXAtom" transform="translate(824,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1667,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2628.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(3628.7,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="TeXAtom" transform="translate(824,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g><g data-mml-node="mo" transform="translate(889,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1667,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(6035,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(6813,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(7257.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(7702.4,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z"></path></g><g data-mml-node="mo" transform="translate(8147,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(8925,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="TeXAtom" transform="translate(824,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10374.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(11375,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="TeXAtom" transform="translate(824,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(12824.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(13825,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="TeXAtom" transform="translate(824,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g><g data-mml-node="mo" transform="translate(0,636)"><svg width="15052.6" height="237" x="0" y="148" viewBox="3763.1 148 15052.6 237"><path data-c="2013" d="M0 248V285H499V248H0Z" transform="scale(45.158,1)"></path></svg></g></g></g></g>',1),L=[M],x=s("p",null,"M\u5E8F\u5217\u53D1\u751F\u5668\u7684\u8BBE\u8BA1\u5DF2\u7ECF\u5B9A\u578B\u5316\uFF0C\u4E00\u822C\u53EA\u9700\u67E5\u8868\u5373\u53EF\u3002",-1),Z=s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"center"}},"k"),s("th",{style:{"text-align":"center"}},[n("M=2"),s("sup",null,"k"),n("-1_1")]),s("th",{style:{"text-align":"center"}},"\u53CD\u9988\u51FD\u6570")])],-1),A=s("td",{style:{"text-align":"center"}},"3",-1),D=s("td",{style:{"text-align":"center"}},"7",-1),C={style:{"text-align":"center"}},E={class:"MathJax",jax:"SVG"},B={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.32ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 3677.6 898"},R=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="msub" transform="translate(2450,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g>',1),j=[R],S=n("\u6216"),N={class:"MathJax",jax:"SVG"},G={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.32ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 3677.6 898"},z=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="msub" transform="translate(2450,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g>',1),J=[z],I=s("td",{style:{"text-align":"center"}},"4",-1),P=s("td",{style:{"text-align":"center"}},"15",-1),O={style:{"text-align":"center"}},X={class:"MathJax",jax:"SVG"},F={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.32ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 3677.6 898"},U=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="msub" transform="translate(2450,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g>',1),K=[U],W=n("\u6216"),Y={class:"MathJax",jax:"SVG"},$={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.32ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 3677.6 898"},ss=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="msub" transform="translate(2450,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g>',1),ns=[ss],as=s("td",{style:{"text-align":"center"}},"5",-1),ts=s("td",{style:{"text-align":"center"}},"31",-1),es={style:{"text-align":"center"}},os={class:"MathJax",jax:"SVG"},ps={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.32ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 3677.6 898"},cs=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="msub" transform="translate(2450,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g>',1),ls=[cs],rs=n("\u6216"),ds={class:"MathJax",jax:"SVG"},is={style:{"vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.32ex",height:"2.032ex",role:"img",focusable:"false",viewBox:"0 -704 3677.6 898"},us=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.8,0)"><path data-c="2295" d="M56 250Q56 394 156 488T384 583Q530 583 626 485T722 250Q722 110 625 14T390 -83Q249 -83 153 14T56 250ZM364 542Q308 539 251 509T148 418T96 278V270H369V542H364ZM681 278Q675 338 650 386T592 462T522 509T458 535T412 542H409V270H681V278ZM96 222Q104 150 139 95T219 12T302 -29T366 -42H369V230H96V222ZM681 222V230H409V-42H412Q429 -42 456 -36T521 -10T590 37T649 113T681 222Z"></path></g><g data-mml-node="msub" transform="translate(2450,0)"><g data-mml-node="mi"><path data-c="1D444" d="M399 -80Q399 -47 400 -30T402 -11V-7L387 -11Q341 -22 303 -22Q208 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435Q740 255 592 107Q529 47 461 16L444 8V3Q444 2 449 -24T470 -66T516 -82Q551 -82 583 -60T625 -3Q631 11 638 11Q647 11 649 2Q649 -6 639 -34T611 -100T557 -165T481 -194Q399 -194 399 -87V-80ZM636 468Q636 523 621 564T580 625T530 655T477 665Q429 665 379 640Q277 591 215 464T153 216Q153 110 207 59Q231 38 236 38V46Q236 86 269 120T347 155Q372 155 390 144T417 114T429 82T435 55L448 64Q512 108 557 185T619 334T636 468ZM314 18Q362 18 404 39L403 49Q399 104 366 115Q354 117 347 117Q344 117 341 117T337 118Q317 118 296 98T274 52Q274 18 314 18Z"></path></g><g data-mml-node="mn" transform="translate(824,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g>',1),ks=[us],Qs={style:{"text-align":"center"}},ms={class:"MathJax",jax:"SVG"},Ts={style:{"vertical-align":"0.43ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.652ex",height:"0.271ex",role:"img",focusable:"false",viewBox:"0 -310 1172 120"},vs=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"22EF",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"})])])],-1),hs=[vs],gs={style:{"text-align":"center"}},bs={class:"MathJax",jax:"SVG"},_s={style:{"vertical-align":"0.43ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.652ex",height:"0.271ex",role:"img",focusable:"false",viewBox:"0 -310 1172 120"},ws=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"22EF",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"})])])],-1),qs=[ws],ys={style:{"text-align":"center"}},fs={class:"MathJax",jax:"SVG"},Vs={style:{"vertical-align":"0.43ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.652ex",height:"0.271ex",role:"img",focusable:"false",viewBox:"0 -310 1172 120"},Hs=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"22EF",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250ZM525 250Q525 274 542 292T585 310Q609 310 627 294T646 251Q646 226 629 208T586 190T543 207T525 250ZM972 250Q972 274 989 292T1032 310Q1056 310 1074 294T1093 251Q1093 226 1076 208T1033 190T990 207T972 250Z"})])])],-1),Ms=[Hs],Ls=e(`<h3 id="\u4EA7\u751F\u968F\u673A\u6570\u7684\u5173\u952Evhdl\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EA7\u751F\u968F\u673A\u6570\u7684\u5173\u952Evhdl\u4EE3\u7801" aria-hidden="true">#</a> \u4EA7\u751F\u968F\u673A\u6570\u7684\u5173\u952Evhdl\u4EE3\u7801\uFF1A</h3><div class="language-vhdl ext-vhdl line-numbers-mode"><pre class="language-vhdl"><code><span class="token keyword">architecture</span> rtl <span class="token keyword">of</span> D201GS10_RandomNumber <span class="token keyword">is</span>    
	<span class="token keyword">signal</span> feedback <span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
    <span class="token keyword">signal</span> q_temp <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- is for M sequence</span>
	randomNum1<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>q_temp<span class="token operator">=</span><span class="token vhdl-vectors number">&quot;000000000000&quot;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> feedback <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> feedback <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
    
    randomNum2<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>clk<span class="token punctuation">,</span>feedback<span class="token punctuation">,</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token comment">-- clk&#39;s period should be 2s,freq=0.5Hz;it is from 1kHz divider 2000</span>
        <span class="token keyword">if</span> clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span> 
			q_temp <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> feedback<span class="token punctuation">;</span>      
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D<code>q_temp &lt;= q_temp(10 downto 0) &amp; feedback;</code>\u8868\u793A\u5C06q_temp\u76840\u523010\u4F4D\u4E0Efeedback\u8FDE\u63A5\uFF0C\u518D\u8D4B\u503C\u7ED9q_temp\u3002</p><h2 id="\u7535\u8DEF\u7684\u6A21\u5757\u5212\u5206\u53CA\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u7535\u8DEF\u7684\u6A21\u5757\u5212\u5206\u53CA\u4F5C\u7528" aria-hidden="true">#</a> \u7535\u8DEF\u7684\u6A21\u5757\u5212\u5206\u53CA\u4F5C\u7528</h2><p>\u7535\u8DEF\u53EF\u5212\u5206\u4E3A\u4EE5\u4E0B\u516D\u4E2A\u6A21\u5757\uFF1A</p><h3 id="\u8BA1\u6570\u5668-count8" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u5668-count8" aria-hidden="true">#</a> \u8BA1\u6570\u5668(count8)</h3>`,6),xs=s("p",null,"\u6A21\u503C\u4E3A8\uFF0C\u5176\u4F5C\u7528\u4E3A\u52A8\u6001\u626B\u63CF8\u4E2A\u6570\u7801\u7BA1\u30028\u4E2A\u6570\u7801\u7BA1\u7684\u63A7\u5236\u7AEF\u53E3\u4E3A",-1),Zs=s("ul",null,[s("li",null,"\u6BB5\u7801\uFF1Aseg(7 downto 0)"),s("li",null,"\u4F4D\u7801\uFF1Acat(7 downto 0)")],-1),As=s("p",null,'\u5728\u67D0\u4E00\u786E\u5B9A\u7684\u65F6\u523B\uFF0C\u53EA\u6709\u4E00\u4E2A\u6570\u7801\u7BA1\u4EAE\uFF0C\u5373\u4EFB\u610F\u65F6\u523B\u4F4D\u7801\u53EA\u542B\u4E00\u4E2A"0"\uFF1B\u7531\u4E8E\u4EBA\u773C\u7684\u89C6\u89C9\u6682\u7559\u73B0\u8C61\uFF0C\u4EBA\u773C\u89C2\u5BDF\u52308\u4E2A\u6570\u7801\u7BA1\u201C\u540C\u65F6\u663E\u793A\u201D\u3002',-1),Ds=s("p",null,"\u626B\u63CF\u7684\u9891\u7387\uFF0C\u5373\u8BA1\u6570\u5668\u53D8\u5316\u7684\u9891\u7387\uFF0C\u9700\u6EE1\u8DB3",-1),Cs={class:"MathJax",jax:"SVG",display:"true"},Es={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.127ex",height:"2.059ex",role:"img",focusable:"false",viewBox:"0 -705 4476.1 910"},Bs=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(827.8,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(1883.6,0)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mi" transform="translate(2771.6,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z"></path></g><g data-mml-node="msub" transform="translate(3549.6,0)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g>',1),Rs=[Bs],js=n("\u5176\u4E2D"),Ss={class:"MathJax",jax:"SVG"},Ns={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.096ex",height:"2.059ex",role:"img",focusable:"false",viewBox:"0 -705 926.6 910"},Gs=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g>',1),zs=[Gs],Js=n(" \u4E3A "),Is={class:"MathJax",jax:"SVG"},Ps={style:{"vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.324ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -683 2353 705"},Os=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="35" d="M164 157Q164 133 148 117T109 101H102Q148 22 224 22Q294 22 326 82Q345 115 345 210Q345 313 318 349Q292 382 260 382H254Q176 382 136 314Q132 307 129 306T114 304Q97 304 95 310Q93 314 93 485V614Q93 664 98 664Q100 666 102 666Q103 666 123 658T178 642T253 634Q324 634 389 662Q397 666 402 666Q410 666 410 648V635Q328 538 205 538Q174 538 149 544L139 546V374Q158 388 169 396T205 412T256 420Q337 420 393 355T449 201Q449 109 385 44T229 -22Q148 -22 99 32T50 154Q50 178 61 192T84 210T107 214Q132 214 148 197T164 157Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g><g data-mml-node="mi" transform="translate(1000,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(1888,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g>',1),Xs=[Os],Fs=n(" \uFF0C\u5728\u8BE5\u5B9E\u9A8C\u677F\u4E2D\uFF0C"),Us={class:"MathJax",jax:"SVG"},Ks={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683"},Ws=s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})])])],-1),Ys=[Ws],$s=n("= 8\u3002"),sn={class:"MathJax",jax:"SVG"},nn={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.096ex",height:"2.059ex",role:"img",focusable:"false",viewBox:"0 -705 926.6 910"},an=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></g>',1),tn=[an],en=n("\u53D6 "),on={class:"MathJax",jax:"SVG"},pn={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.371ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 2374 705"},cn=e('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(500,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(1021,0)"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(1909,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g></g></g>',1),ln=[cn],rn=n(" \u663E\u7136\u6EE1\u8DB3\u8981\u6C42\u3002"),dn=s("h3",{id:"\u6309\u952E\u6D88\u6296-debouncing",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6309\u952E\u6D88\u6296-debouncing","aria-hidden":"true"},"#"),n(" \u6309\u952E\u6D88\u6296(debouncing)")],-1),un=e('<p>\u5B83\u7684\u4F5C\u7528\u9664\u4E86\u6807\u9898\u6240\u8A00\u6D88\u6296\uFF0C\u8FD8\u6709\uFF1A\u6309\u952E\u4E00\u65E6\u88AB\u6309\u4E0B\uFF08\u4E0D\u7BA1\u6709\u6CA1\u6709\u5F39\u5F00\uFF09\u540E\uFF0C2s\u5185\u4FDD\u6301btnout\u8F93\u51FA\u9AD8\u7535\u5E73\u201C1\u201D\uFF0C\u4F7F\u663E\u793A\u8BD1\u7801\u7684\u968F\u673A\u6570\u90E8\u5206\u590D\u4F4D\u4FDD\u63012s\u518D\u53D8\u5316\u3002</p><p>\u6D88\u6296\u7684\u539F\u7406\u5982\u4E0B\uFF1A</p><p><img src="'+r+'" alt="image-20220602181033266" loading="lazy"></p><p><img src="'+d+'" alt="image-20220602185634561" loading="lazy"></p><p>\u6B64\u5904\u4F7F\u7528\u8BA1\u6570\u6CD5\u6D88\u6296\uFF0C\u8BA1\u6570\u5668\u5728btn\u4E3A\u201C1\u201D\u65F6\uFF0C\u5BF9\u6BEB\u79D2\u4FE1\u53F7\u8BA1\u6570\uFF0C\u8BA1\u6570\u503C\u4FDD\u5B58\u5728num\u4E2D\u3002\u68C0\u6D4Bnum\u7684\u503C\uFF0C\u53EA\u6709\u5B83\u5927\u4E8E\u67D0\u4E00\u6570\u503C\uFF08\u598230\uFF09\u65F6\uFF0Cbtnout\u624D\u8F93\u51FA\u201C1\u201D\uFF0C\u5426\u5219\u8F93\u51FA\u201C0\u201D\u3002</p><blockquote><p><strong>\u6CE8\u610F</strong></p><p>\u6309\u952E\u590D\u4F4D\u65F6\u5E94\u5F15\u5165\u4E00\u8BA1\u6570\u503Cnum\uFF0C\u63A7\u5236btnout\u8F93\u51FA\u9AD8\u7535\u5E732s\u3002</p></blockquote><h3 id="\u5206\u9891\u5668-divider2000" tabindex="-1"><a class="header-anchor" href="#\u5206\u9891\u5668-divider2000" aria-hidden="true">#</a> \u5206\u9891\u5668(divider2000)</h3>',7),kn=s("p",null,"\u5B83\u7684\u4F5C\u7528\u662F\u6839\u636E\u8F93\u5165\u76841kHz\u4FE1\u53F7\u83B7\u5F97\u5468\u671F\u4E3A2s\u7684\u65F6\u949F\u4FE1\u53F7\uFF0C\u76F4\u63A5\u6216\u95F4\u63A5\u5730\u4F7F\u663E\u793A\u7684\u968F\u673A\u6570\u4EE52s\u7684\u5468\u671F\u5207\u6362\u3002\u5206\u9891\u5668\u7684\u57FA\u672C\u539F\u7406\u662F\u5BF9\u8F93\u5165\u4FE1\u53F7\u8BA1\u6570\uFF0C\u5F53\u8BA1\u6570\u503C\u8FBE\u5230\u8BBE\u5B9A\u503C\u65F6\u8BA9\u8F93\u51FA\u4FE1\u53F7\u7FFB\u8F6C\u3002\u6B64\u5904\u662F2000\u5206\u9891\uFF0C\u8BA1\u6570\u503Cnum\u4E0A\u9650\u662F999\u3002",-1),Qn=s("blockquote",null,[s("p",null,[s("strong",null,"\u6CE8\u610F")]),s("p",null,"\u6309\u952E\u590D\u4F4D\u968F\u673A\u6570\u65F6\uFF0C\u8BE5\u5206\u9891\u4FE1\u53F7\u4E5F\u5E94\u8BE5\u6E05\u96F6\uFF01\u4E14\u8BA1\u6570\u503Cnum\u4E0D\u662F\u8D4B\u521D\u503C0\uFF0C\u800C\u662F\u8D4B\u521D\u503C-999\uFF01\u5426\u5219\u6E05\u96F6\u65F6\u7684\u201C000\u201D\u663E\u793A\u65F6\u95F4\u4E0D\u8DB32s\uFF0C\u6E05\u96F6\u540E\u7684\u7B2C\u4E00\u6B21\u968F\u673A\u6570\u663E\u793A\u4EA6\u4E0D\u8DB32s\uFF01")],-1),mn=s("h3",{id:"m\u5E8F\u5217\u53D1\u751F\u5668-randomnumber",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#m\u5E8F\u5217\u53D1\u751F\u5668-randomnumber","aria-hidden":"true"},"#"),n(" M\u5E8F\u5217\u53D1\u751F\u5668(RandomNumber)")],-1),Tn=s("p",null,"\u5B83\u7684\u4F5C\u7528\u662F\u4EA7\u751F\u4E00\u7EC4\u4E8C\u8FDB\u5236\uFF08\u4F2A\uFF09\u968F\u673A\u6570\uFF0C\u8FD9\u91CC\u53D6\u5176\u4E2D\u768412\u4F4D\u3002",-1),vn=s("blockquote",null,[s("p",null,[s("strong",null,"\u4E3A\u4EC0\u4E48\u53D612\u4F4D\uFF1F")]),s("p",null,"\u6570\u7801\u7BA1\u4E0A\u663E\u793A\u7684\u4E09\u4F4D\u968F\u673A\u6570\uFF0C\u6BCF\u4E00\u4F4D\u90FD\u662F\u5341\u8FDB\u5236\uFF080~9\uFF09\uFF0C\u6BCF\u4E00\u4F4D\u5341\u8FDB\u5236\u6570\u6700\u5C11\u9700\u56DB\u4F4D\u4E8C\u8FDB\u5236\u6570\u6765\u8868\u793A\uFF0C\u5982\u63098421BCD\u7801\uFF0C0001\u8868\u793A1,0111\u8868\u793A7\u3002"),s("p",null,"\u5728\u663E\u793A\u8BD1\u7801\u65F6\u518D\u628A\u8FD912\u4F4D\u5207\u5272\u62103\u4E2A4\u4F4D\uFF0C\u5206\u522B\u8BD1\u7801\u3002"),s("p",null,"\u53E6\u5916\u6309\u952E\u590D\u4F4D\u65F6\uFF0C\u4E5F\u4E0D\u8981\u6E05M\u5E8F\u5217\uFF0CM\u5E8F\u5217\u5E94\u4F7F\u7528\u9AD8\u9891\u4FE1\u53F7\uFF0C\u4FDD\u8BC1\u968F\u673A\u6570\u53D8\u5316\u8DB3\u591F\u5FEB\uFF0C\u590D\u4F4D\u540E\u7684\u7B2C\u4E00\u6B21\u968F\u673A\u6570\u663E\u793A\u624D\u4E0D\u4F1A\u4E0E\u4E0A\u4E00\u6B21\u91CD\u590D\u3002")],-1),hn=s("h3",{id:"transfer",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#transfer","aria-hidden":"true"},"#"),n(" transfer")],-1),gn=s("p",null,[n("\u5B83\u7684\u4F5C\u7528\u4EC5\u662F\u5C06\u4ECE\u4E4B\u524D\u7684M\u5E8F\u5217\u53D1\u751F\u5668\u7684\u5F97\u5230\u7684\u968F\u673A\u6570\u518D\u8D4B\u7ED9\u53E6\u4E00\u4FE1\u53F7\uFF08\u53D8\u91CF\uFF09\uFF0C\u5173\u952E\u662F\u8FD9\u4E00\u64CD\u4F5C"),s("strong",null,"\u6BCF\u96942s\u6267\u884C\u4E00\u6B21"),n("\uFF0C\u8FD9\u6837\u5C31\u80FD\u5B9E\u73B0\u6BCF\u96942s\u66F4\u65B0\u4E00\u6B21\u6570\u7801\u7BA1\u663E\u793A\u7684\u968F\u673A\u6570\u3002")],-1),bn=s("h3",{id:"\u663E\u793A\u8BD1\u7801-decode",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u663E\u793A\u8BD1\u7801-decode","aria-hidden":"true"},"#"),n(" \u663E\u793A\u8BD1\u7801(decode)")],-1),_n=s("h2",{id:"\u603B\u4F53\u903B\u8F91\u7ED3\u6784\u56FE-\u8BE6\u7EC6\u51C6\u786E\u6807\u6CE8\u7AEF\u53E3\u53CA\u5185\u90E8\u4FE1\u53F7",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u603B\u4F53\u903B\u8F91\u7ED3\u6784\u56FE-\u8BE6\u7EC6\u51C6\u786E\u6807\u6CE8\u7AEF\u53E3\u53CA\u5185\u90E8\u4FE1\u53F7","aria-hidden":"true"},"#"),n(" \u603B\u4F53\u903B\u8F91\u7ED3\u6784\u56FE\uFF08\u8BE6\u7EC6\u51C6\u786E\u6807\u6CE8\u7AEF\u53E3\u53CA\u5185\u90E8\u4FE1\u53F7\uFF09")],-1),wn=e(`<h2 id="vhdl\u4EE3\u7801\u622A\u56FE\u53CA\u7F16\u8BD1\u6210\u529F\u622A\u56FE" tabindex="-1"><a class="header-anchor" href="#vhdl\u4EE3\u7801\u622A\u56FE\u53CA\u7F16\u8BD1\u6210\u529F\u622A\u56FE" aria-hidden="true">#</a> VHDL\u4EE3\u7801\u622A\u56FE\u53CA\u7F16\u8BD1\u6210\u529F\u622A\u56FE</h2><h3 id="vhdl\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#vhdl\u4EE3\u7801" aria-hidden="true">#</a> vhdl\u4EE3\u7801:</h3><div class="language-vhdl ext-vhdl line-numbers-mode"><pre class="language-vhdl"><code> <span class="token keyword">library</span> ieee<span class="token punctuation">;</span>
<span class="token keyword">use</span> ieee<span class="token punctuation">.</span>std_logic_1164<span class="token punctuation">.</span><span class="token keyword">all</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> ieee<span class="token punctuation">.</span>std_logic_unsigned<span class="token punctuation">.</span><span class="token keyword">all</span><span class="token punctuation">;</span>

<span class="token keyword">entity</span> D201GS10_RandomNumber <span class="token keyword">is</span>
    <span class="token keyword">port</span> <span class="token punctuation">(</span>
        clk   <span class="token punctuation">:</span> <span class="token keyword">in</span> std_logic<span class="token punctuation">;</span>
        btn <span class="token punctuation">:</span> <span class="token keyword">in</span> std_logic<span class="token punctuation">;</span>
        seg<span class="token punctuation">:</span> <span class="token keyword">out</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cat<span class="token punctuation">:</span> <span class="token keyword">out</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">-- qotmp: out std_logic_vector(3 downto 0);</span>
        <span class="token comment">-- qstmp: out std_logic_vector(3 downto 0);</span>
        <span class="token comment">-- qttmp: out std_logic_vector(3 downto 0)</span>
        <span class="token comment">-- numtmp: out integer range 0 to 1999; -- is for debouncing</span>
        <span class="token comment">-- q: out std_logic_vector(11 downto 0);</span>
        <span class="token comment">-- btnout_temp: out std_logic;</span>
        <span class="token comment">-- clktmp: out std_logic</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span> <span class="token keyword">entity</span><span class="token punctuation">;</span>

<span class="token keyword">architecture</span> rtl <span class="token keyword">of</span> D201GS10_RandomNumber <span class="token keyword">is</span>
    <span class="token keyword">signal</span> feedback <span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
    <span class="token keyword">signal</span> q_temp <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- is for M sequence</span>
    <span class="token keyword">signal</span> q_temp4 <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- is for M sequence</span>
    <span class="token keyword">signal</span> q_temp2 <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg</span>
    <span class="token keyword">signal</span> qo <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg M sequence</span>
    <span class="token keyword">signal</span> qs <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg M sequence</span>
    <span class="token keyword">signal</span> qt <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg M sequence</span>
    <span class="token comment">-- signal q_temp3 : std_logic_vector(2 downto 0) := &quot;000&quot;; -- is for debouncing</span>
    <span class="token keyword">signal</span> clk_2s <span class="token punctuation">:</span> std_logic <span class="token operator">:=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>
    
    <span class="token keyword">signal</span> btnout <span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
    <span class="token keyword">signal</span> num<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token number">99</span><span class="token punctuation">;</span> <span class="token comment">-- is for debouncing</span>
    <span class="token keyword">signal</span> num4<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token number">1999</span><span class="token punctuation">;</span> <span class="token comment">-- is for debouncing</span>
    <span class="token keyword">signal</span> num2<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token operator">-</span><span class="token number">999</span> <span class="token keyword">to</span> <span class="token number">999</span><span class="token punctuation">;</span> <span class="token comment">-- is for divider2000</span>
    <span class="token keyword">signal</span> num3<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token number">999</span><span class="token punctuation">;</span> <span class="token comment">-- is for divider2000</span>
    <span class="token keyword">signal</span> seg_temp<span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">signal</span> cat_temp<span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">signal</span> flag<span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
	divider<span class="token punctuation">:</span> <span class="token keyword">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">,</span>clk_2s<span class="token punctuation">,</span>num2<span class="token punctuation">,</span>num3<span class="token punctuation">,</span>btnout<span class="token punctuation">)</span> <span class="token keyword">begin</span>
		<span class="token keyword">if</span> clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>btnout <span class="token operator">=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> num2 <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">999</span><span class="token punctuation">;</span>clk_2s <span class="token operator">&lt;=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>
			<span class="token keyword">elsif</span> num2 <span class="token operator">=</span> <span class="token number">999</span> <span class="token keyword">then</span> <span class="token comment">--*2=divider num</span>
				num2 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>clk_2s <span class="token operator">&lt;=</span> <span class="token operator">not</span> clk_2s<span class="token punctuation">;</span>
			<span class="token keyword">else</span>
				num2 <span class="token operator">&lt;=</span> num2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    debouncing1<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>clk<span class="token punctuation">,</span>btn<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span> <span class="token function">rising_edge</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span> btn<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span>
                <span class="token keyword">if</span> num <span class="token operator">=</span> <span class="token number">99</span> <span class="token keyword">then</span> num <span class="token operator">&lt;=</span> <span class="token number">99</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> num <span class="token operator">&lt;=</span> num<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> 
                num <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
      <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
      
    debouncing2<span class="token punctuation">:</span> <span class="token keyword">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">,</span>num<span class="token punctuation">,</span>btnout<span class="token punctuation">,</span>num4<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span> <span class="token function">rising_edge</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span> num <span class="token operator">&gt;</span> <span class="token number">30</span> <span class="token keyword">then</span> btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>num4 <span class="token operator">&lt;=</span> num4 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">elsif</span><span class="token punctuation">(</span>num4 <span class="token operator">&lt;</span> <span class="token number">1999</span> <span class="token operator">and</span> num4 <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">then</span> num4 <span class="token operator">&lt;=</span> num4 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">elsif</span><span class="token punctuation">(</span>num4 <span class="token operator">=</span> <span class="token number">1999</span><span class="token punctuation">)</span> <span class="token keyword">then</span> btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>num4 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>num4 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    randomNum1<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>q_temp<span class="token operator">=</span><span class="token vhdl-vectors number">&quot;000000000000&quot;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> feedback <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> feedback <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
    
    randomNum2<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>clk<span class="token punctuation">,</span>feedback<span class="token punctuation">,</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token comment">-- clk&#39;s period should be 2s,freq=0.5Hz;it is from 1kHz divider 2000</span>
        <span class="token keyword">if</span> clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span> 
			q_temp <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> feedback<span class="token punctuation">;</span>      
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    count8<span class="token punctuation">:</span><span class="token keyword">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span> q_temp2 <span class="token operator">=</span> <span class="token vhdl-vectors number">&quot;111&quot;</span> <span class="token keyword">then</span> q_temp2 <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;000&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> 
                q_temp2 <span class="token operator">&lt;=</span> q_temp2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    transfer<span class="token punctuation">:</span> <span class="token keyword">process</span><span class="token punctuation">(</span>clk_2s<span class="token punctuation">,</span>q_temp4<span class="token punctuation">,</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">rising_edge</span><span class="token punctuation">(</span>clk_2s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">then</span> q_temp4 <span class="token operator">&lt;=</span> q_temp<span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    decode<span class="token punctuation">:</span><span class="token keyword">process</span><span class="token punctuation">(</span>qo<span class="token punctuation">,</span>qs<span class="token punctuation">,</span>qt<span class="token punctuation">,</span>q_temp4<span class="token punctuation">,</span>q_temp2<span class="token punctuation">,</span>btnout<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        qo <span class="token operator">&lt;=</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qs <span class="token operator">&lt;=</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qt <span class="token operator">&lt;=</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> q_temp2 <span class="token keyword">is</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01111111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--2</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11101111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;100&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;101&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111011&quot;</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>btnout<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                <span class="token keyword">else</span>
                    <span class="token keyword">case</span> qo <span class="token keyword">is</span> 
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0010&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0011&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--6</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11100000&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--7</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1000&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--8</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1001&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--9</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;00000000&quot;</span><span class="token punctuation">;</span>
                    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span> 
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;110&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111101&quot;</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>btnout<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                <span class="token keyword">else</span>
                    <span class="token keyword">case</span> qs <span class="token keyword">is</span> 
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0100&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0101&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0110&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--6</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0111&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--7</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--8</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--9</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;00000000&quot;</span><span class="token punctuation">;</span>
                    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span> 
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;111&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>btnout<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                <span class="token keyword">else</span>
                    <span class="token keyword">case</span> qt <span class="token keyword">is</span> 
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span><span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0100&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0101&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0110&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--6</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0111&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--7</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--8</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--9</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;00000000&quot;</span><span class="token punctuation">;</span>
                    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span> 
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span> decode<span class="token punctuation">;</span>
    seg <span class="token operator">&lt;=</span> seg_temp<span class="token punctuation">;</span>
    cat <span class="token operator">&lt;=</span> cat_temp<span class="token punctuation">;</span>
    <span class="token comment">-- btnout_temp &lt;= btnout;</span>
    <span class="token comment">-- q &lt;= q_temp4;</span>
    <span class="token comment">-- clktmp &lt;= clk_2s;</span>
    <span class="token comment">-- numtmp &lt;= num4;</span>
<span class="token keyword">end</span> <span class="token keyword">architecture</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5DE5\u7A0B\u6587\u4EF6\u622A\u56FE" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u7A0B\u6587\u4EF6\u622A\u56FE" aria-hidden="true">#</a> \u5DE5\u7A0B\u6587\u4EF6\u622A\u56FE\uFF1A</h3><p><img src="`+i+'" alt="image-20220602225112266" loading="lazy"></p><p><img src="'+u+'" alt="image-20220602224938100" loading="lazy"></p><p><img src="'+k+'" alt="image-20220602225200053" loading="lazy"></p><p><img src="'+Q+'" alt="image-20220602225226508" loading="lazy"></p><p><img src="'+m+'" alt="image-20220602225246364" loading="lazy"></p><p><img src="'+T+'" alt="image-20220602200631559" loading="lazy"></p><h2 id="\u4EFF\u771F\u6CE2\u5F62\u56FE\u53CA\u5206\u6790\u3001\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u4EFF\u771F\u6CE2\u5F62\u56FE\u53CA\u5206\u6790\u3001\u7ED3\u8BBA" aria-hidden="true">#</a> \u4EFF\u771F\u6CE2\u5F62\u56FE\u53CA\u5206\u6790\u3001\u7ED3\u8BBA</h2><p><img src="'+v+'" alt="image-20220602200815209" loading="lazy"></p><p><img src="'+h+'" alt="image-20220602202051320" loading="lazy"></p><p>\u4ECE\u4E0A\u56FE\u53EF\u4EE5\u770B\u51FA\uFF0C\u4F4D\u7801\u5927\u6982\u6BCF1ms\u5207\u6362\u4E00\u6B21\uFF0C\u6B63\u786E\u5B9E\u73B0\u4E86\u52A8\u6001\u626B\u63CF\u6570\u7801\u7BA1\u3002\u518D\u770B\u4F4D\u7801\uFF0C\u521D\u59CB\u663E\u793A&quot;20110000&quot;\uFF0C\u4E5F\u80FD\u6B63\u786E\u8BD1\u7801\u3002</p><p><img src="'+g+'" alt="image-20220602203300776" loading="lazy"></p><p>\u5C06\u65F6\u95F4\u8F74\u79FB\u52A8\u52302s\u5904\uFF0C\u5F97\u5230\u4E0A\u56FE\uFF0C\u53EF\u4EE5\u770B\u51FA2s\u540E\u540E\u4E09\u4F4D\u968F\u673A\u6570\u5DF2\u7ECF\u53D8\u5316\u3002</p><p>\u5982\u679C\u57281s\u5DE6\u53F3\u5904\u6309\u952E\u6309\u4E0B\uFF0C\u5982\u4E0B\u56FE\uFF1A</p><p><img src="'+b+'" alt="image-20220602203738759" loading="lazy"></p><p>\u4EFF\u771F\u540E\uFF1A</p><p><img src="'+_+'" alt="image-20220602204050164" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230\u6B64\u65F6\u5373\u4F7F\u65F6\u95F4\u6765\u52303s\u5DE6\u53F3\uFF0C\u968F\u673A\u6570\u4ECD\u4FDD\u6301\u201C000\u201D\uFF0C\u8BF4\u660E\u6309\u952E\u53EF\u4EE5\u5B9E\u73B0\u590D\u4F4D\uFF0C\u4E14\u590D\u4F4D\u4FDD\u63012s\u3002</p><h2 id="\u5B9E\u9A8C\u4E2D\u9047\u5230\u7684\u95EE\u9898\u53CA\u89E3\u51B3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9A8C\u4E2D\u9047\u5230\u7684\u95EE\u9898\u53CA\u89E3\u51B3\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u9A8C\u4E2D\u9047\u5230\u7684\u95EE\u9898\u53CA\u89E3\u51B3\u65B9\u6CD5</h2><h3 id="_1-vhdl\u7F16\u8BD1\u62A5\u9519" tabindex="-1"><a class="header-anchor" href="#_1-vhdl\u7F16\u8BD1\u62A5\u9519" aria-hidden="true">#</a> 1.vhdl\u7F16\u8BD1\u62A5\u9519</h3><p><strong>can&#39;t infer register for temp_temp[0] at D201GS10_RandomNumber.vhd(87) because it does not hold its value outside the clock edge</strong></p><p>\u65E0\u6CD5\u63A8\u65AD\u5BC4\u5B58\u5668\uFF0C\u56E0\u4E3A\u5B83\u7684\u503C\u4E0D\u5728\u65F6\u949F\u8FB9\u7F18\u4E4B\u5916.</p><p>\u9700\u8981\u6CE8\u610F\u51E0\u4E2A\u70B9\uFF1A</p><ul><li>\u5224\u65AD\u65F6\u949F\u4E0A\u5347\u6CBF\u7684if\u8BED\u53E5\uFF0C\u4E0D\u80FD\u643A\u5E26else\uFF1B</li><li>\u540C\u4E00\u4E2A\u4FE1\u53F7\u7684\u8D4B\u503C\u4E0D\u80FD\u51FA\u73B0\u5728\u591A\u4E2A\u8FDB\u7A0B\u91CC\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u91CC\u201C\u5199\u201D\uFF0C\u5176\u4ED6\u8FDB\u7A0B\u53EA\u80FD\u201C\u8BFB\u201D\uFF1B</li><li>\u6309\u952E\u6E05\u96F6\uFF08\u590D\u4F4D\uFF09\u5E94\u8BE5\u662F\u7535\u5E73\u89E6\u53D1\uFF0C\u800C\u4E0D\u662F\u8FB9\u6CBF\u89E6\u53D1\u3002</li></ul><h3 id="_2-\u4E0B\u8F7D\u5230\u5F00\u53D1\u677F\u4E0A\u65F6\u6570\u7801\u7BA1\u4E71\u7801" tabindex="-1"><a class="header-anchor" href="#_2-\u4E0B\u8F7D\u5230\u5F00\u53D1\u677F\u4E0A\u65F6\u6570\u7801\u7BA1\u4E71\u7801" aria-hidden="true">#</a> 2.\u4E0B\u8F7D\u5230\u5F00\u53D1\u677F\u4E0A\u65F6\u6570\u7801\u7BA1\u4E71\u7801</h3><p>\u5728\u68C0\u67E5\u81EA\u5DF1\u7684\u7A0B\u5E8F\u3001\u4EFF\u771F\u5206\u6790\u786E\u5B9A\u65E0\u8BEF\u540E\uFF0C\u6700\u540E\u53D1\u73B0\u6BB5\u7801\u7684\u5F15\u811A\u914D\u7F6E\u9519\u8BEF\u3002</p><p>\u6839\u636E\u5B9E\u9A8C\u677F\u8BF4\u660E\u4E66\uFF1A</p><p><img src="'+w+'" alt="image-20220602212130607" loading="lazy"></p><p>\u5982\u8981\u60F301100000\u8868\u793A\u201C1\u201D\uFF0C\u5219seg: abcdefgp\uFF0C\u53EA\u6709bc\u4EAE\uFF0C</p><p>seg[7] -&gt; a -&gt; PIN_62</p><p>seg[6] -&gt; b -&gt; PIN_59</p><p>...</p><p>\u6CE8\u610F\u5DE6\u8FB9\u8D77\u662F\u9AD8\u4F4D\uFF0C\u5982\u201C01100000\u201D\u4E2D\uFF0Cseg[7]=0,seg[6]=1,seg[5]=1.</p><p>\u6700\u540E\u7684\u914D\u7F6E\u5E94\u8BE5\u5982\u4E0B\uFF1A</p><p><img src="'+q+'" alt="image-20220602220550763" loading="lazy"></p><h3 id="_3-\u968F\u673A\u6570\u663E\u793A\u8BD1\u7801\u662F\u4E8C\u8FDB\u5236\u6570" tabindex="-1"><a class="header-anchor" href="#_3-\u968F\u673A\u6570\u663E\u793A\u8BD1\u7801\u662F\u4E8C\u8FDB\u5236\u6570" aria-hidden="true">#</a> 3.\u968F\u673A\u6570\u663E\u793A\u8BD1\u7801\u662F\u4E8C\u8FDB\u5236\u6570</h3><p>\u6CE8\u610F\u5E94\u8BD1\u7801\u6210\u5341\u8FDB\u5236\u6570\u3002</p><h3 id="_4-\u6BCF\u6B21\u6E05\u96F6\u540E\u7684\u663E\u793A\u90FD\u4E00\u6837" tabindex="-1"><a class="header-anchor" href="#_4-\u6BCF\u6B21\u6E05\u96F6\u540E\u7684\u663E\u793A\u90FD\u4E00\u6837" aria-hidden="true">#</a> 4.\u6BCF\u6B21\u6E05\u96F6\u540E\u7684\u663E\u793A\u90FD\u4E00\u6837</h3><p>\u6E05\u96F6\u4E0D\u8981\u6E05M\u5E8F\u5217\uFF0C\u53EA\u6E05\u663E\u793A\u3002M\u5E8F\u5217\u7684\u65F6\u949F\u7528\u9AD8\u9891\uFF0C\u6BCF2s\u8BFB\u53D6M\u5E8F\u5217\u7684\u7ED3\u679C\u53D6\u663E\u793A</p><h3 id="_5-\u6E05\u96F6\u540E\u663E\u793A\u7684\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u6301\u7EED\u65F6\u95F4\u4E0D\u662F2\u79D2" tabindex="-1"><a class="header-anchor" href="#_5-\u6E05\u96F6\u540E\u663E\u793A\u7684\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u6301\u7EED\u65F6\u95F4\u4E0D\u662F2\u79D2" aria-hidden="true">#</a> 5.\u6E05\u96F6\u540E\u663E\u793A\u7684\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u6301\u7EED\u65F6\u95F4\u4E0D\u662F2\u79D2</h3><p>\u6309\u952E\u590D\u4F4D\u65F6\uFF0C\u5206\u9891\u5668\u4E2D\u7684\u5206\u9891\u4FE1\u53F7\u4E5F\u5E94\u8BE5\u6E05\u96F6\u3002</p><h2 id="\u603B\u7ED3\u53CA\u611F\u60F3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3\u53CA\u611F\u60F3" aria-hidden="true">#</a> \u603B\u7ED3\u53CA\u611F\u60F3</h2><ul><li>\u8FD9\u6B21\u7684\u968F\u673A\u6570\u5B9E\u9A8C\u4E0D\u4EC5\u5DE9\u56FA\u4E86\u4E4B\u524D\u5B66\u4E60\u7684\u6570\u7801\u7BA1\uFF08\u52A8\u6001\u626B\u63CF\uFF09\u3001\u8BA1\u6570\u5668\u3001\u5206\u9891\u5668\uFF0C\u53C8\u7ED3\u5408\u4E0E\u5E94\u7528\u4E86\u65B0\u7684\u77E5\u8BC6\u70B9\uFF1AM\u5E8F\u5217\u53D1\u751F\u5668\u3002\u7ECF\u8FC7\u8FD9\u6B21\u5B9E\u9A8C\uFF0C\u6211\u5BF9\u4E4B\u524D\u5B66\u4E60\u7684\u7279\u522B\u662F\u6570\u7801\u7BA1\u7684\u52A8\u6001\u626B\u63CF\u6709\u4E86\u66F4\u6DF1\u7684\u7406\u89E3\u3002</li><li>\u8FD9\u6B21\u5B9E\u9A8C\u505A\u5F97\u8F83\u4E3A\u574E\u5777\uFF0C\u4E3B\u8981\u5728\u4E09\u4E2A\u5730\u65B9\uFF1A\u4E00\u662Fvhdl\u7F16\u8BD1\u62A5\u9519\uFF0C\u7EA0\u9519\u82B1\u8D39\u4E86\u5927\u91CF\u65F6\u95F4\uFF1B\u4E8C\u662F\u6570\u7801\u7BA1\u6BB5\u7801\u5F15\u811A\u914D\u7F6E\u987A\u5E8F\u76F8\u53CD\uFF0C\u5BFC\u81F4\u5B9E\u9A8C\u677F\u4E0A\u663E\u793A\u8BD1\u7801\u4E71\u7801\uFF0C\u82B1\u8D39\u4E86\u4E0D\u5C11\u65F6\u95F4\u5B9A\u4F4D\u5230\u8FD9\u4E2A\u9519\u8BEF\uFF1B\u4E09\u662F\u4F18\u5316\u7EC6\u8282\uFF0C\u5982\u6E05\u96F6\u65F6\u95F4\u8981\u4FDD\u63012s\u3001\u6E05\u96F6\u540E\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u4E0D\u80FD\u8DDF\u4E0A\u6B21\u76F8\u540C\u3001\u6E05\u96F6\u540E\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u4E5F\u8981\u4FDD\u63012s\u3002</li><li>\u521D\u5B66\u9636\u6BB5\uFF0C\u8001\u5E08\u3001\u540C\u5B66\u7684\u5E2E\u52A9\u5F88\u91CD\u8981\uFF0C\u6211\u4EEC\u8981\u5BF9\u6BCF\u4E00\u4E2A\u7ED9\u6211\u4EECdebug\u7684\u4EBA\u5FC3\u5B58\u611F\u6FC0\uFF1B\u5F53\u7136\u6211\u8BA4\u4E3A\u5FC5\u987B\u5728\u81EA\u5DF1\u5C1D\u8BD5\u3001\u6478\u7D22\u4E4B\u540E\u624D\u6709\u8D44\u683C\u60F3\u4ED6\u4EBA\u5BFB\u6C42\u5E2E\u52A9\u3002</li></ul>',46);function qn(yn,fn){const o=l("Mermaid");return a(),t("div",null,[f,s("mjx-container",V,[(a(),t("svg",H,L))]),x,s("table",null,[Z,s("tbody",null,[s("tr",null,[A,D,s("td",C,[s("mjx-container",E,[(a(),t("svg",B,j))]),S,s("mjx-container",N,[(a(),t("svg",G,J))])])]),s("tr",null,[I,P,s("td",O,[s("mjx-container",X,[(a(),t("svg",F,K))]),W,s("mjx-container",Y,[(a(),t("svg",$,ns))])])]),s("tr",null,[as,ts,s("td",es,[s("mjx-container",os,[(a(),t("svg",ps,ls))]),rs,s("mjx-container",ds,[(a(),t("svg",is,ks))])])]),s("tr",null,[s("td",Qs,[s("mjx-container",ms,[(a(),t("svg",Ts,hs))])]),s("td",gs,[s("mjx-container",bs,[(a(),t("svg",_s,qs))])]),s("td",ys,[s("mjx-container",fs,[(a(),t("svg",Vs,Ms))])])])])]),Ls,p(o,{id:"mermaid-64a56faa",code:"flowchart%20LR%0A%20%20subgraph%20count8%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20clk%20--%3E%20count8%20--%3E%20out(%22q_temp%5B2...0%5D%22)%0A%20%20%0A"}),xs,Zs,As,Ds,s("mjx-container",Cs,[(a(),t("svg",Es,Rs))]),s("p",null,[js,s("mjx-container",Ss,[(a(),t("svg",Ns,zs))]),Js,s("mjx-container",Is,[(a(),t("svg",Ps,Xs))]),Fs,s("mjx-container",Us,[(a(),t("svg",Ks,Ys))]),$s,s("mjx-container",sn,[(a(),t("svg",nn,tn))]),en,s("mjx-container",on,[(a(),t("svg",pn,ln))]),rn]),dn,p(o,{id:"mermaid-64a56ef2",code:"flowchart%20LR%0A%20%20subgraph%20debouncing%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20btn%20--%3E%20debouncing%20--%3E%20btnout%0A%20%20clk%20--%3E%20debouncing%0A"}),un,p(o,{id:"mermaid-64a56928",code:"flowchart%20LR%0A%20%20subgraph%20divider2000%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20clk%20--%3E%20divider2000%20--%3E%20q(%22clk_2s%22)%0A"}),kn,Qn,mn,p(o,{id:"mermaid-64a568e0",code:"flowchart%20LR%0A%20%20subgraph%20RandomNumber%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20clk%20--%3E%20RandomNumber%20--%3E%20q(%22q_temp%5B11...0%5D%22)%0A"}),Tn,vn,hn,p(o,{id:"mermaid-64a56862",code:"flowchart%20LR%0A%20%20subgraph%20transfer%0A%20%20direction%20LR%0A%20%20%20%20x(%22q_temp3%20%3C%3D%20q_temp%22)%20%0A%20%20end%0A%20%20clk_2s%20--%3E%20transfer%20--%3E%20q(%22q_temp3%5B11...0%5D%22)%0A"}),gn,bn,_n,p(o,{id:"mermaid-64a56824",code:"flowchart%20LR%0A%20%20subgraph%20D201GS10_RANDOMNUMBER%0A%20%20%20%20direction%20LR%0A%20%20%20%20subgraph%20count8%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20debouncing%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20divider2000%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20transfer%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20RandomNumber%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20decode%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20clk_0(%22clk%22)%20--%3E%20count8%20--%3E%20%7C%22q_temp2%5B2...0%5D%22%7C%20decode%0A%20%20%20%20clk_0%20--%3E%20debouncing%20--%3E%20%7Cbtnout%7C%20decode%0A%20%20%20%20btn_(%22btn%22)%20--%3E%20debouncing%0A%20%20%20%20clk_0%20--%3E%20divider2000%20--%3E%20%7Cclk_2s%7C%20transfer%20--%3E%20%7C%22t_temp3%5B11...0%5D%22%7C%20decode%0A%20%20%20%20clk_0%20--%3E%20RandomNumber%20--%3E%7C%22q_temp%5B11...0%5D%22%7C%20transfer%0A%20%20end%0A%20%20clk%20---%3E%20D201GS10_RANDOMNUMBER%20---%3E%20seg(%22seg%5B7..0%5D%22)%0A%20%20btn%20---%3E%20D201GS10_RANDOMNUMBER%20---%3E%20cat(%22cat%5B7..0%5D%22)%0A%20%20%0A"}),wn])}const Mn=c(y,[["render",qn],["__file","\u968F\u673A\u6570\u751F\u6210\u53CA\u663E\u793A\u7535\u8DEF\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0.html.vue"]]);export{Mn as default};
