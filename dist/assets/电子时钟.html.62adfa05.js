import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,d as a,f as n,r as o}from"./app.b31ffc85.js";const c="/assets/image-20220615210549497.9a42f07a.png",i="/assets/image-20220615211242128.22f87061.png",u="/assets/image-20220615211431885.fbd17a44.png",l={},k=n('<h1 id="\u57FA\u4E8Estm32f103\u5355\u7247\u673A\u7684\u65F6\u949F\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8Estm32f103\u5355\u7247\u673A\u7684\u65F6\u949F\u8BBE\u8BA1\u4E0E\u5B9E\u73B0" aria-hidden="true">#</a> \u57FA\u4E8ESTM32F103\u5355\u7247\u673A\u7684\u65F6\u949F\u8BBE\u8BA1\u4E0E\u5B9E\u73B0</h1><blockquote><p><strong>\u6458\u8981</strong></p><p>\u5728\u5982\u4ECA\u8FD9\u4E2A\u9AD8\u79D1\u6280\u53D1\u5C55\u793E\u4F1A\uFF0C\u6570\u5B57\u7535\u5B50\u65F6\u949F\u5DF2\u6210\u7ECF\u4E3A\u4EBA\u4EEC\u65E5\u5E38\u751F\u6D3B\u4E2D\u5FC5\u4E0D\u53EF\u5C11\u7684\u5FC5\u8981\u7269\u54C1\uFF0C\u5E7F\u6CDB\u5E94\u7528\u4E8E\u4E2A\u4EBA\u5BB6\u5EAD\u53CA\u8F66\u7AD9\uFF0C\u7535\u5F71\u9662\uFF0C\u529E\u516C\u5BA4\u7B49\u91CD\u8981\u7684\u516C\u5171\u573A\u6240\uFF0C\u7ED9\u4EBA\u6C11\u7684\u751F\u6D3B\u3001\u5B66\u4E60\u3001\u5DE5\u4F5C\u5E26\u6765\u5F88\u5927\u7684\u65B9\u4FBF\uFF0C\u7531\u4E8E\u5355\u7247\u673A\u5177\u6709\u4F53\u79EF\u5C0F\u3001\u529F\u80FD\u5F3A\u53EF\u9760\u6027\u9AD8\u3001\u4EF7\u683C\u4F4E\u5EC9\u7B49\u7CFB\u5217\u4F18\u70B9\uFF0C\u7528\u5355\u7247\u673A\u5236\u4F5C\u6570\u5B57\u65F6\u949F\uFF0C\u66F4\u65B9\u4FBF\u4E8E\u4EBA\u6C11\uFF0C\u670D\u52A1\u4E8E\u793E\u4F1A\uFF0C\u7B26\u5408\u793E\u4F1A\u79D1\u5B66\u53D1\u5C55\u89C2\u7684\u9700\u8981\uFF0C\u4E14\u5F00\u53D1\u8F83\u4E3A\u5BB9\u6613\uFF0C\u6240\u4EE5\u53D7\u5230\u4EBA\u4EEC\u7684\u91CD\u89C6\u548C\u5173\u6CE8\uFF0C\u4EE5\u5176\u6781\u9AD8\u7684\u6027\u80FD\u4EF7\u683C\u6BD4\uFF0C\u9002\u5E94\u4E86\u793E\u4F1A\u7684\u53D1\u5C55\u9700\u8981\u3002\u901A\u8FC7\u5BF9\u5B83\u7684\u5B66\u4E60\u3001\u5E94\u7528\uFF0C\u6211\u8BBE\u8BA1\u4E86\u4E00\u4E2A\u7B80\u5355\u7684\u7535\u5B50\u65F6\u949F\uFF0C\u80FD\u591F\u51C6\u786E\u663E\u793A\u65F6\u95F4\uFF0C\u8C03\u6574\u65F6\u95F4\uFF0C\u953B\u70BC\u4E86\u8F6F\u4EF6\u8BBE\u8BA1\u80FD\u529B\u3002</p><p><strong>\u5173\u952E\u8BCD</strong>\uFF1Astm32\u3001\u7535\u5B50\u65F6\u949F</p></blockquote><h2 id="\u524D\u8A00" tabindex="-1"><a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a> \u524D\u8A00</h2><h3 id="\u80CC\u666F" tabindex="-1"><a class="header-anchor" href="#\u80CC\u666F" aria-hidden="true">#</a> \u80CC\u666F</h3><p>\u968F\u7740\u793E\u4F1A\u53D1\u5C55\u7684\u8D8A\u6765\u8D8A\u5FEB\uFF0C\u5355\u7247\u673A\u81EA20\u4E16\u7EAA70\u5E74\u4EE3\u95EE\u4E16\u4EE5\u6765\uFF0C\u7531\u4E8E\u5176\u4F53\u79EF\u6BD4\u8F83\u5C0F\uFF0C\u91CD\u91CF\u8F7B\u7B49\u591A\u79CD\u6709\u5229\u4F18\u52BF\uFF0C\u6240\u4EE5\u6DF1\u53D7\u4EBA\u4EEC\u7684\u70ED\u7231\uFF0C\u7531\u4E8E\u5F00\u53D1\u8F83\u5BB9\u6613\uFF0C\u7075\u6D3B\u6027\u597D\uFF0C\u4E5F\u540C\u65F6\u88AB\u5F88\u591A\u8BBE\u8BA1\u8005\u62FF\u6765\u5E94\u7528\u5230\u5404\u79CD\u8BBE\u5907\u9886\u57DF\u4E2D;\u7535\u5B50\u65F6\u949F\u662F\u5176\u4E2D\u4E00\u4E2A\u5178\u578B\u7684\u4F8B\u5B50\uFF0C\u7531\u4E8E\u4EBA\u4EEC\u7684\u751F\u6D3B\u8282\u594F\u8D8A\u6765\u8D8A\u5FEB\uFF0C\u65F6\u95F4\u89C2\u5FF5\u5728\u4E0D\u65AD\u7684\u589E\u5F3A\uFF0C\u751F\u6D3B\u91CC\u5F88\u591A\u65F6\u5019\u79BB\u4E0D\u5F00\u65F6\u949F\uFF0C\u53EF\u4EE5\u8BF4\u65F6\u949F\u662F\u73B0\u4EE3\u4EBA\u751F\u6D3B\u4E2D\u662F\u4E0D\u53EF\u7F3A\u5C11\u7684\u4E1C\u897F\uFF0C\u73B0\u5982\u4ECA\uFF0C\u65F6\u949F\u7684\u6B3E\u6837\u548C\u529F\u80FD\u4E5F\u8D8A\u6765\u8D8A\u591A\uFF0C\u4EBA\u4EEC\u5BF9\u949F\u8868\u7684\u7CBE\u786E\u5EA6\u4E5F\u8D8A\u6765\u8D8A\u9AD8\u3002</p><h3 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h3><p>\u7535\u5B50\u65F6\u949F\u79F0\u6570\u663E\u949F\uFF0C\u662F\u4E00\u79CD\u7528\u6570\u5B57\u7535\u8DEF\u6280\u672F\u5B9E\u73B0\u65F6\uFF0C\u5206\uFF0C\u79D2\u8BA1\u65F6\u7684\u88C5\u7F6E\uFF0C\u4E0E\u673A\u68B0\u65F6\u949F\u76F8\u6BD4\uFF0C\u76F4\u89C2\u6027\u4E3A\u5176\u53EA\u8981\u663E\u8457\u7279\u70B9\uFF0C\u4E14\u975E\u673A\u68B0\u9A71\u52A8\uFF0C\u5177\u6709\u66F4\u957F\u7684\u4F7F\u7528\u5BFF\u547D\u3002</p><h3 id="\u9700\u6C42\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42\u5206\u6790" aria-hidden="true">#</a> \u9700\u6C42\u5206\u6790</h3><p>\u4F20\u7EDF\u7684\u6570\u5B57\u7535\u5B50\u65F6\u949F\u91C7\u7528\u4E86\u5F88\u591A\u7684\u5206\u7ACB\u5143\u5668\u4EF6\uFF0C\u4E0D\u4EC5\u5360\u7528\u4E86\u5F88\u5927\u7684\u7A7A\u95F4\u800C\u4E14\u5229\u7528\u7387\u6BD4\u4E5F\u5F88\u4F4E\uFF0C\u968F\u7740\u7CFB\u7EDF\u8BBE\u8BA1\u590D\u6742\u5EA6\u7684\u4E0D\u65AD\u63D0\u9AD8\uFF0C\u7528\u4F20\u7EDF\u65F6\u949F\u7CFB\u7EDF\u8BBE\u8BA1\u65B9\u6CD5\u5DF2\u7ECF\u5F88\u96BE\u6EE1\u8DB3\u8BBE\u8BA1\u7684\u9700\u6C42\uFF0C\u800C\u5355\u7247\u673A\u81EA20\u4E16\u7EAA\u672B21\u4E16\u7EAA\u521D\u95EE\u4E16\u4EE5\u6765\uFF0C\u7531\u4E8E\u5355\u7247\u673A\u5177\u6709\u4F53\u79EF\u5C0F\u3001\u529F\u80FD\u5F3A\u53EF\u9760\u6027\u9AD8\u3001\u4EF7\u683C\u4F4E\u5EC9\u7B49\u4E00\u7CFB\u5217\u4F18\u70B9\uFF0C\u6240\u4EE5\u4E0D\u4EC5\u5DF2\u6210\u4E3A\u5DE5\u4E1A\u6D4B\u63A7\u9886\u57DF\u666E\u904D\u91C7\u7528\u7684\u667A\u80FD\u5316\u63A7\u5236\u5DE5\u5177\uFF0C\u800C\u4E14\u8FD8\u5DF2\u6E17\u5165\u5230\u4EBA\u4EEC\u5DE5\u4F5C\u548C\u548C\u751F\u6D3B\u7684\u5404\u4E2A\u89D2\u843D\uFF0C\u6709\u529B\u5730\u63A8\u52A8\u4E86\u5404\u4E2A\u884C\u4E1A\u7684\u6280\u672F\u6539\u9020\u3002</p><p>\u7535\u5B50\u65F6\u949F\u662F\u91C7\u7528\u6570\u5B57\u7535\u8DEF\u5B9E\u73B0\u5BF9\u201C\u65F6\u201D\u3001\u201C\u5206\u201D\u3001\u201C\u79D2\u201D\u6570\u5B57\u663E\u793A\u7684\u8BA1\u65F6\u88C5\u7F6E\uFF0C\u4E3B\u8981\u662F\u5229\u7528\u7535\u5B50\u6280\u672F\u5C06\u65F6\u949F\u6570\u5B57\u5316\uFF0C\u7535\u5B50\u5316\uFF0C\u8BA9\u65F6\u949F\u66F4\u7CBE\u786E\uFF0C\u7CBE\u51C6\u3002\u6570\u5B57\u96C6\u6210\u7535\u8DEF\u6280\u672F\u7684\u53D1\u5C55\u91C7\u7528\u4E86\u5148\u8FDB\u7684\u77F3\u82F1\u6280\u672F\uFF0C\u4F7F\u6570\u5B57\u949F\u5177\u6709\u8D70\u65F6\u51C6\u786E\u3001\u6027\u80FD\u7A33\u5B9A\u3001\u643A\u5E26\u65B9\u4FBF\u3001\u4F53\u79EF\u5C0F\uFF0C\u754C\u9762\u7F8E\u89C2\u3001\u529F\u80FD\u5F3A\u3001\u53EF\u9760\u6027\u9AD8\u3002</p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p>\u7528\u5355\u7247\u673A\u5236\u4F5C\u6570\u5B57\u65F6\u949F\uFF0C\u66F4\u65B9\u4FBF\u4E8E\u4EBA\u6C11\uFF0C\u670D\u52A1\u4E8E\u793E\u4F1A\uFF0C\u7B26\u5408\u793E\u4F1A\u79D1\u5B66\u53D1\u5C55\u89C2\u7684\u9700\u8981\uFF0C\u4E14\u5F00\u53D1\u8F83\u4E3A\u5BB9\u6613\uFF0C\u6240\u4EE5\u53D7\u5230\u4EBA\u4EEC\u7684\u91CD\u89C6\u548C\u5173\u6CE8\uFF0C\u4EE5\u5176\u6781\u9AD8\u7684\u6027\u80FD\u4EF7\u683C\u6BD4\uFF0C\u9002\u5E94\u4E86\u793E\u4F1A\u7684\u53D1\u5C55\u9700\u8981\u3002\u968F\u7740\u5355\u7247\u673A\u6027\u4EF7\u6BD4\u7684\u4E0D\u65AD\u63D0\u9AD8\uFF0C\u65B0\u4E00\u4EE3\u4EA7\u54C1\u7684\u5E94\u7528\u4E5F\u8D8A\u6765\u8D8A\u5E7F\u6CDB\u4E86\uFF0C\u5927\u7684\u65B9\u9762\u53EF\u4EE5\u5728\u5DE5\u4E1A\u5DE5\u7A0B\u65B9\u9762\u505A\u63A7\u5236\u7CFB\u7EDF\uFF0C\u5C0F\u7684\u65B9\u9762\u53EF\u4EE5\u7528\u4E8E\u5BB6\u7535\u63A7\u5236\uFF0C\u7535\u5B50\u73A9\u5177\u7B49\u3002</p><p>\u63A5\u4E0B\u6765\u9610\u8FF0<strong>\u5982\u4F55\u8BBE\u8BA1\u4E0E\u5B9E\u73B0\u57FA\u4E8ESTM32F103\u5355\u7247\u673A\u7684\u65F6\u949F</strong></p><h2 id="\u8BE6\u7EC6\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#\u8BE6\u7EC6\u8BBE\u8BA1" aria-hidden="true">#</a> \u8BE6\u7EC6\u8BBE\u8BA1</h2><h3 id="\u529F\u80FD\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u529F\u80FD\u5206\u6790" aria-hidden="true">#</a> \u529F\u80FD\u5206\u6790</h3><ol><li><p>\u901A\u8FC7\u6570\u7801\u7BA1\u663E\u793A\u6570\u5B57\uFF0C\u5305\u62EC\u65F6\u5206\u79D2\uFF0C\u5177\u6709\u65F6\u95F4\u6821\u51C6\u7684\u529F\u80FD</p></li><li><p>\u6574\u70B9\u62A5\u65F6\u53EF\u4EE5\u901A\u8FC7\u58F0\u97F3\u6216\u5149\u4E24\u79CD\u60C5\u51B5\u62A5\u8B66\u3002</p></li><li><p>\u65F6\u95F4\u6821\u51C6\u7531\u5F00\u53D1\u677F\u4E0A\u7684\u6309\u952E\u7EDF\u4E00\u5B8C\u6210\u3002</p></li></ol><h3 id="\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> \u5DE5\u4F5C\u539F\u7406</h3><p>\u4E00\u4E2A\u6700\u57FA\u672C\u7684\u6570\u5B57\u65F6\u949F\u7CFB\u7EDF\u4E3B\u8981\u7531\u8BA1\u65F6\u6A21\u5757\u3001\u8BD1\u7801\u663E\u793A\u6A21\u5757\uFF0C\u6B64\u5916\u7684\u65F6\u95F4\u6821\u51C6\u6A21\u5757\u5C5E\u4E8E\u9644\u52A0\u529F\u80FD\u3002\u7CFB\u7EDF\u603B\u4F53\u6A21\u5757\u56FE\u5982\u4E0B\uFF1A</p>',18),r=n(`<h4 id="\u8BA1\u65F6\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u65F6\u6A21\u5757" aria-hidden="true">#</a> \u8BA1\u65F6\u6A21\u5757</h4><p>\u8BA1\u65F6\u6A21\u5757\u5E94\u5305\u542B\u4E00\u4E2A\u79D2\u4FE1\u53F7\u53D1\u751F\u5668\uFF0C\u5B83\u76F4\u63A5\u51B3\u5B9A\u6574\u4E2A\u7CFB\u7EDF\u7684\u7CBE\u5EA6\uFF0C\u53EF\u901A\u8FC7\u914D\u7F6E\u5355\u7247\u673A\u5185\u90E8\u7684\u5B9A\u65F6\u5668\u5E76\u5728\u76F8\u5E94\u7684\u4E2D\u65AD\u670D\u52A1\u51FD\u6570\u4E2D\u7ED9\u79D2\u53D8\u91CF\u8D4B\u503C\u5B9E\u73B0\u3002</p><blockquote><p><strong>\u6CE8\u610F</strong></p><p>\u4E0D\u80FD\u4F7F\u7528HAL\u5E93\u4E2D\u7684\u5EF6\u65F6\u51FD\u6570\u6765\u7ED9\u79D2\u53D8\u91CF\u81EA\u589E\uFF0C\u56E0\u4E3A\u4E0D\u80FD\u4FDD\u8BC1\u76F8\u90BB\u4E24\u6B21\u6267\u884C\u5EF6\u65F6\u51FD\u6570\u7684\u65F6\u95F4\u95F4\u9694\u662F1s\u3002</p></blockquote><p>\u6B64\u6A21\u5757\u7684\u8BA1\u65F6\u53D8\u91CF\u6709\u4E24\u79CD\u5B9E\u73B0\u65B9\u6848\uFF1A</p><ol><li>\u5B9A\u4E49\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B\u3001\u957F\u5EA6\u4E3A6\u7684\u53D8\u91CF\uFF0C\u524D\u4E24\u4F4D\u8868\u793A\u65F6\u3001\u4E2D\u95F4\u4E24\u4F4D\u8868\u793A\u5206\u3001\u6700\u540E\u4E24\u4F4D\u8868\u793A\u79D2\u3002\u79D2\u4FE1\u53F7\u63A7\u5236\u6700\u540E\u4E00\u4F4D\u81EA\u589E\uFF0C\u902210\u8FDB1\uFF0C\u6700\u540E\u4E24\u4F4D\u902260\u8FDB1\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002\u7136\u540E\u904D\u5386\u8BE5\u6570\u7EC4\u53BB\u663E\u793A\u8BD1\u7801\u3002</li><li>\u5B9A\u4E49\u4E00\u4E2A\u65E0\u7B26\u53F7\u957F\u6574\u578B\uFF08uint32_t\uFF09\u53D8\u91CF\uFF0C\u6765\u8BB0\u5F55\u5F53\u524D\u7684\u603B\u79D2\u6570\uFF0C\u5728\u663E\u793A\u8BD1\u7801\u65F6\u518D\u6362\u7B97\u6210\u65F6\u5206\u79D2\u3002\u6CE8\u610F\u56E0\u4E3A24h=24*3600s=86400s,\u800Cuint16_t\u8868\u793A\u7684\u6700\u5927\u7684\u6570\u4E3A2^16=65536&lt;86400\uFF0C\u6240\u4EE5\u5B9A\u4E49\u6210uint32_t\u7C7B\u578B\uFF0C\u907F\u514D\u6570\u636E\u6EA2\u51FA\u3002</li></ol><p>\u4F18\u7F3A\u70B9\u5BF9\u6BD4\uFF1A</p><ul><li><p>\u7B2C\u4E00\u79CD\u65B9\u6848\u7684\u4F18\u70B9\u662F\u6570\u636E\u7C7B\u578B\u5360\u7528\u5B58\u50A8\u7A7A\u95F4\u5C0F\uFF0C\u7F3A\u70B9\u662F\u5728\u5904\u7406\u8FDB\u4F4D\u65F6\u6709\u8F83\u591A\u7684\u903B\u8F91\u5224\u65AD\uFF0C\u4E0D\u662F\u5F88\u76F4\u89C2\u3002</p></li><li><p>\u7B2C\u4E8C\u79CD\u65B9\u6848\u7684\u4F18\u70B9\u662F\u903B\u8F91\u7B80\u5355\u6E05\u6670\uFF0C\u53EA\u9700\u6309\u5982\u4E0B\u65B9\u6CD5\u8BA1\u7B97\u5373\u53EF\u5F97\u5230\u65F6\uFF0C\u5206\uFF0C\u79D2\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token class-name">uint16_t</span> hour <span class="token operator">=</span> f_time <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">,</span> min <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">3600</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">,</span> sec <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>\u200B \u7F3A\u70B9\u4E5F\u663E\u800C\u6613\u89C1\uFF1A\u5360\u7528\u5B58\u50A8\u7A7A\u95F4\u8F83\u5927\u3002</p><p>\u5BF9\u4E8E\u8BBE\u8BA1\u8005\u6765\u8BF4\uFF0C\u5728\u8F6F\u786C\u4EF6\u6761\u4EF6\u5141\u8BB8\u65F6\uFF0C\u7B80\u5355\u7684\u903B\u8F91\u663E\u7136\u66F4\u53D7\u6B22\u8FCE\u3002\u800C\u5BF9\u4E8E\u8BE5\u7CFB\u7EDF\uFF0C\u5373\u4F7F\u5B9A\u4E49\u4E00\u4E2Auint32_t\u7C7B\u578B\uFF0C\u4E5F\u4E0D\u4F1A\u9020\u6210\u4EC0\u4E48\u8D1F\u62C5\u3002\u6240\u4EE5\u6211\u9009\u62E9\u4E86\u65B9\u6848\u4E8C\u3002</p><p>\u5728CubeMX\u4E2D\uFF0C\u6309\u5982\u4E0B\u6B65\u9AA4\u8FDB\u884C\u5B9A\u65F6\u56681\u7684\u76F8\u5173\u914D\u7F6E\uFF1A</p><p><img src="`+c+'" alt="image-20220615210549497" loading="lazy"></p><p>\u5176\u4E2D<strong>PSC</strong>\u5904\u662F\u914D\u7F6E\u5206\u9891\u7CFB\u6570\uFF0C<strong>Counter Period</strong>\u5904\u662F\u914D\u7F6E\u5B9A\u65F6\u5668\u7684\u8BA1\u6570\u4E0A\u9650\u503C\uFF0C\u5F53\u8FBE\u5230\u8BE5\u4E0A\u9650\u503C\u65F6\u6267\u884C\u4E2D\u65AD\u670D\u52A1\u51FD\u6570\u3002</p><p><img src="'+i+'" alt="image-20220615211242128" loading="lazy"></p><p>\u914D\u7F6E\u4E3A\u5B9A\u65F6\u5668\u66F4\u65B0\u65F6\u89E6\u53D1\u4E2D\u65AD\u3002\u522B\u5FD8\u4E86\u914D\u7F6E\u65F6\u949F\u6E90\u4E3A\u5185\u90E8\u65F6\u949F\u3002</p><p>\u4F7F\u80FD\u5B9A\u65F6\u5668\u76F8\u5E94\u7684\u4E2D\u65AD\uFF1A</p><p><img src="'+u+`" alt="image-20220615211431885" loading="lazy"></p><p>\u6700\u540E\u5728\u7A0B\u5E8F\u4E2D\u6267\u884C\u51FD\u6570<code>HAL_TIM_Base_Start_IT(&amp;htim1);</code>\u5373\u53EF\u542F\u52A8\u5B9A\u65F6\u56681\u3002\u5B9A\u65F6\u5668\u7684\u4E2D\u65AD\u670D\u52A1\u51FD\u6570\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">HAL_TIM_PeriodElapsedCallback</span><span class="token punctuation">(</span>TIM_HandleTypeDef <span class="token operator">*</span>htim<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>htim<span class="token operator">-&gt;</span>Instance <span class="token operator">==</span> TIM1<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5B9A\u65F6\u56681\u89E6\u53D1\u7684\u4E2D\u65AD</span>
    time <span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment">//time\u662F\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\uFF0C\u8BB0\u5F55\u603B\u79D2\u6570</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>time <span class="token operator">&gt;=</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> time <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>htim<span class="token operator">-&gt;</span>Instance <span class="token operator">==</span> TIM3<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5B9A\u65F6\u56683\u89E6\u53D1\u7684\u4E2D\u65AD,\u7528\u4E8E\u8C03\u6574\u65F6\u95F4\u65F6\u7684\u95EA\u70C1</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>isHide <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> isHide <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> isHide <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u4F20\u5165\u7684\u53C2\u6570htim\u53EF\u7528\u4E8E\u5224\u65AD\u662F\u54EA\u4E2A\u5B9A\u65F6\u5668\u4EA7\u751F\u7684\u4E2D\u65AD\u3002</p><p>\u6B63\u5982\u524D\u6587\u6240\u8FF0\uFF0C\u6B64\u5904\u51E0\u4E4E\u6CA1\u6709\u903B\u8F91\u5224\u65AD\uFF0C\u4E0D\u7528\u8003\u8651\u8FDB\u4F4D\u95EE\u9898\u3002</p><h4 id="\u8BD1\u7801\u663E\u793A\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u8BD1\u7801\u663E\u793A\u6A21\u5757" aria-hidden="true">#</a> \u8BD1\u7801\u663E\u793A\u6A21\u5757</h4><p>\u8BE5\u6A21\u5757\u53EA\u9700\u63A5\u6536\u4E00\u4E2A\u53C2\u6570time\uFF0C\u5373\u53EF\u8BD1\u7801\u663E\u793A\u3002</p>`,22),d=n(`<p>\u5176\u4E2D\u8C03\u7528ShowNumber(num,pos)\u51FD\u6570\u4F1A\u5B9E\u73B0\uFF1A\u4E00\u4E2A\u7279\u5B9A\u4F4D\u7F6E\u4E0A\uFF08\u53C2\u6570pos\u51B3\u5B9A\uFF09\u7684\u6570\u7801\u7BA1\u663E\u793A\u4E00\u4E2A\u5341\u8FDB\u5236\u6570\uFF08\u53C2\u6570num\u51B3\u5B9A\uFF09\u3002\u540C\u4E00\u65F6\u95F4\u53EA\u4F1A\u4EAE\u8D77\u4E00\u4E2A\u6570\u7801\u7BA1\uFF0C\u540E\u4E00\u6B21\u8C03\u7528\u7684\u6548\u679C\u4F1A\u8986\u76D6\u524D\u4E00\u6B21\uFF0C\u6240\u4EE5\u9700\u8981\u52A8\u6001\u626B\u63CF\u8FD96\u4E2A\u6570\u7801\u7BA1\uFF0C\u5728\u89C6\u89C9\u4E0A\u5B9E\u73B0\u201C<strong>\u540C\u65F6\u4EAE</strong>\u201D\u3002</p><p>\u5177\u4F53\u7684\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">showTime</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> f_time<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
	<span class="token class-name">uint16_t</span> hour <span class="token operator">=</span> f_time <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">,</span> min <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">3600</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">,</span> sec <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>hour <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>hour <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>min <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>min <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>sec <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>sec <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span><span class="token operator">:</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u65F6\u95F4\u6821\u51C6\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u6821\u51C6\u6A21\u5757" aria-hidden="true">#</a> \u65F6\u95F4\u6821\u51C6\u6A21\u5757</h4><p>\u5B9E\u9A8C\u677F\u4E0A\u5177\u6709\u4E0A\u4E0B\u5DE6\u53F3\u4E2D\u4E94\u4E2A\u6309\u952E\uFF0C\u53EF\u8FD9\u6837\u8BBE\u8BA1\uFF1A</p><ul><li><strong>\u4E2D</strong>\u8868\u793A\u5207\u6362\u65F6\u95F4\u663E\u793A/\u8C03\u6574\u6A21\u5F0F\uFF0C\u6BD4\u5982\u7B2C\u4E00\u6B21\u6309\u8FDB\u5165\u65F6\u95F4\u8C03\u6574\u6A21\u5F0F\uFF0C\u518D\u6309\u4E00\u6B21\u6B63\u5E38\u663E\u793A\u65F6\u95F4\u3002</li><li><strong>\u5DE6\u53F3</strong>\u8868\u793A\u9009\u62E9\u8C03\u6574\u7684\u4F4D\u7F6E\uFF0C\u6BD4\u5982\u521D\u59CB\u9009\u62E9\u7684\u662F\u79D2\u7684\u4E2A\u6570\u4F4D\uFF0C\u6309\u4E24\u6B21\u6B21<strong>\u5DE6</strong>\u53EF\u9009\u62E9\u5206\u7684\u4E2A\u6570\u4F4D\u3002\u4E14\u9009\u4E2D\u7684\u4F4D\u7F6E\u4EE50.5s\u5207\u6362\u663E\u793A/\u9690\u85CF\u3002</li><li><strong>\u4E0A</strong>\u8868\u793A\u589E\u5927\u5F53\u524D\u503C\uFF0C<strong>\u4E0B</strong>\u8868\u793A\u51CF\u5C0F\u5F53\u524D\u503C\uFF0C\u5177\u4F53\u589E\u5927/\u51CF\u5C0F\u7684\u503C\u8FD8\u8981\u89C6\u5F53\u524D\u4F4D\u7F6E\u800C\u5B9A\u3002</li></ul><p>\u5F53\u6309\u4E0B\u4E2D\u95F4\u7684\u6309\u952E\u8FDB\u5165\u65F6\u95F4\u6821\u51C6\u6A21\u5F0F\u65F6\uFF0C\u6570\u7801\u7BA1\u4E0A\u7684\u663E\u793A\u5E94\u8BE5\u9759\u6B62\uFF0C\u800C\u80CC\u540E\u7684\u8BA1\u6570\u503Ctime\u4E0D\u9759\u6B62\uFF0C\u6240\u4EE5\u663E\u7136\u9700\u8981\u53E6\u4E00\u4E2A\u4E2D\u95F4\u53D8\u91CFTimeTemp\u63A7\u5236\u8BD1\u7801\u663E\u793A\u3002</p><p>\u81F3\u4E8E\u63A7\u5236\u9009\u62E9\u7684\u4F4D\u7F6E\u4EE50.5s\u5207\u6362\u663E\u793A/\u9690\u85CF\uFF0C\u53EF\u4EE5\u542F\u7528\u5B9A\u65F6\u56683\uFF0C\u6BCF\u96940.5s\u4EA7\u751F\u4E00\u6B21\u4E2D\u65AD\uFF0C\u4EA7\u751F\u4E2D\u65AD\u65F6\uFF0C\u6267\u884C\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>isHide <span class="token operator">=</span> <span class="token operator">!</span>isHide<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u518D\u7528\u53D8\u91CFisHide\u63A7\u5236\u9009\u62E9\u4F4D\u7F6E\u5904\u7684\u663E\u793A\u8BD1\u7801\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> num<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>isHide<span class="token punctuation">)</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> PosSelceted<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10\u4E0D\u80FD\u88AB\u8BD1\u7801\uFF0C\u5BFC\u81F4\u8BE5\u4F4D\u7F6E\u5904\u7684\u6570\u7801\u7BA1\u4E0D\u663E\u793A</span>
  <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> PosSelceted<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u7684PosSelected\u8868\u793A\u9009\u62E9\u7684\u4F4D\u7F6E\uFF0C\u521D\u59CB\u4E3A5\uFF08\u5373\u79D2\u7684\u4E2A\u6570\u4F4D\uFF09\u3002\u6309\u4E0B\u5DE6\u53F3\u952E\u65F6\u53EF\u589E\u52A0\u6216\u51CF\u5C0F\uFF0C\u5982\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//\u8BE5\u6309\u94AE\u5B9E\u73B0\u8C03\u6574\u4F4D\u7F6E\u5411\u53F3\u79FB</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>isManaging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>PosSelceted <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> PosSelceted <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> PosSelceted <span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u589E\u5927\u3001\u51CF\u5C0F\u5F53\u524D\u503C\u8FD8\u9700\u5224\u65AD\u5F53\u524D\u9009\u62E9\u4F4D\u7F6E\uFF0C\u5982\u9009\u62E9\u4E86\u79D2\u7684\u4E2A\u6570\u4F4D\uFF0C\u589E\u5927\u5373<code>time ++;</code>\u5982\u9009\u62E9\u4E86\u5206\u7684\u4E2A\u6570\u4F4D\uFF0C\u589E\u5927\u5373<code>time += 60;</code>\u5177\u4F53\u5982\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>PosSelceted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">36000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">36000</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">3600</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">600</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">60</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        TimeTemp <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        PosSelceted <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
        <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
time <span class="token operator">=</span> TimeTemp<span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u6B63\u5982\u524D\u6587\u6240\u8FF0\uFF0C\u7531\u4E8E\u5B9A\u4E49\u7684time\u662F\u957F\u6574\u578B\uFF0C\u5728\u589E\u52A0\u6216\u51CF\u5C0F\u5F53\u524D\u503C\u65F6\uFF0C\u4EA6\u4E0D\u7528\u8003\u8651\u8FDB\u4F4D\u3001\u501F\u4F4D\uFF0C\u8FD9\u5C31\u4F7F\u903B\u8F91\u53D8\u5F97\u5F88\u7B80\u5355\u3001\u6E05\u6670\uFF0C\u5927\u5927\u7B80\u5316\u4E86\u8BBE\u8BA1\u8005\u76F8\u5E94\u7684\u601D\u8DEF\u548C\u7B97\u6CD5\u3002</p><h2 id="\u6548\u679C\u6F14\u793A" tabindex="-1"><a class="header-anchor" href="#\u6548\u679C\u6F14\u793A" aria-hidden="true">#</a> \u6548\u679C\u6F14\u793A</h2><video id="video" controls="" preload="true" poster=""><source id="mp4" src="https://gorilla.cdnja.co/v/jg/JGnvG.mp4?token=7zFZJevG3oJr-xB5D8QWIw&amp;expires=1655305934" type="video/mp4"></video><h1 id="\u5B8C\u6574\u4EE3\u7801\u9644\u5F55" tabindex="-1"><a class="header-anchor" href="#\u5B8C\u6574\u4EE3\u7801\u9644\u5F55" aria-hidden="true">#</a> \u5B8C\u6574\u4EE3\u7801\u9644\u5F55</h1><p>\u524D\u6587\u53EA\u7ED9\u9664\u4E86\u90E8\u5206\u3001\u5173\u952E\u7684\u4EE3\u7801\uFF0C\u4E0B\u9762\u7ED9\u51FA<strong>main.c\u3001seg7.c</strong>\u6587\u4EF6\u7684\u4EE3\u7801\u3002\u5176\u4ED6\u6587\u4EF6\u5747\u4E3ACubeMX\u81EA\u52A8\u751F\u6210\u3002</p><h2 id="main-c" tabindex="-1"><a class="header-anchor" href="#main-c" aria-hidden="true">#</a> main.c\uFF1A</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/* USER CODE BEGIN Header */</span>
<span class="token comment">/**
  ******************************************************************************
  * @file           : main.c
  * @brief          : Main program body
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2022 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */</span>
<span class="token comment">/* USER CODE END Header */</span>
<span class="token comment">/* Includes ------------------------------------------------------------------*/</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;main.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;tim.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;usart.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;usb_device.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;gpio.h&quot;</span></span>

<span class="token comment">/* Private includes ----------------------------------------------------------*/</span>
<span class="token comment">/* USER CODE BEGIN Includes */</span>
<span class="token comment">// #include &quot;seg7.h&quot;</span>
  <span class="token class-name">uint32_t</span> time <span class="token operator">=</span> <span class="token number">72000</span><span class="token punctuation">;</span>
  <span class="token class-name">uint32_t</span> TimeTemp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token class-name">uint16_t</span> isManaging <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//\u8868\u793A\u6B63\u5728\u8C03\u6574\u7684flag\uFFFD????1\u8868\u793A\u8C03\u6574\u6A21\u5F0F\uFFFD????0\u8868\u793A\u4E0D\u662F\u8C03\u6574\u6A21\u5F0F</span>
  <span class="token class-name">uint16_t</span> isHide <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//\u8868\u793A\u67D0\u4E2A\u6570\u7801\u7BA1\u663E\u793A\u6216\u9690\u85CF</span>
  <span class="token class-name">uint16_t</span> PosSelceted <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//\u8C03\u6574\u9009\u62E9\u7684\u4F4D\uFFFD????</span>
<span class="token comment">/* USER CODE END Includes */</span>

<span class="token comment">/* Private typedef -----------------------------------------------------------*/</span>
<span class="token comment">/* USER CODE BEGIN PTD */</span>

<span class="token comment">/* USER CODE END PTD */</span>

<span class="token comment">/* Private define ------------------------------------------------------------*/</span>
<span class="token comment">/* USER CODE BEGIN PD */</span>
<span class="token comment">/* USER CODE END PD */</span>

<span class="token comment">/* Private macro -------------------------------------------------------------*/</span>
<span class="token comment">/* USER CODE BEGIN PM */</span>

<span class="token comment">/* USER CODE END PM */</span>

<span class="token comment">/* Private variables ---------------------------------------------------------*/</span>

<span class="token comment">/* USER CODE BEGIN PV */</span>

<span class="token comment">/* USER CODE END PV */</span>

<span class="token comment">/* Private function prototypes -----------------------------------------------*/</span>
<span class="token keyword">void</span> <span class="token function">SystemClock_Config</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">MX_NVIC_Init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* USER CODE BEGIN PFP */</span>

<span class="token comment">/* USER CODE END PFP */</span>

<span class="token comment">/* Private user code ---------------------------------------------------------*/</span>
<span class="token comment">/* USER CODE BEGIN 0 */</span>

<span class="token comment">/* 
Num: \u53C2\u4E0E\u8FD0\u7B97\u7684\u6570
Arithmetic: 0\u8868\u793A\u52A0\u6CD5\uFF0C1\u8868\u793A\u51CF\u6CD5
\u8FD4\u56DE\u503C: 0\u8868\u793A\u4E0D\u5408\u6CD5,1\u8868\u793A\u5408\u6CD5
 */</span>
<span class="token class-name">uint16_t</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> Num<span class="token punctuation">,</span> <span class="token class-name">uint16_t</span> Arithmetic<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>Arithmetic <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>TimeTemp <span class="token operator">+</span> Num<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>Arithmetic <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>TimeTemp <span class="token operator">&lt;</span> Num<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">HAL_GPIO_EXTI_Callback</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> GPIO_Pin<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>GPIO_Pin<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">case</span> BTN_0_Pin<span class="token operator">:</span> <span class="token punctuation">{</span>
      TimeTemp <span class="token operator">=</span> time<span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> 
      <span class="token punctuation">{</span>
        isManaging <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token function">HAL_TIM_Base_Start_IT</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> 
      <span class="token punctuation">{</span>
        isManaging <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token function">HAL_TIM_Base_Stop_IT</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim3<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> BTN_1_Pin<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//\u8BE5\u6309\u94AE\u5B9E\u73B0\u8C03\u6574\u4F4D\u7F6E\u5411\u5DE6\u79FB\uFFFD???? </span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>PosSelceted <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> PosSelceted <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> PosSelceted <span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
      
    <span class="token keyword">case</span> BTN_3_Pin<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u8BE5\u6309\u94AE\u5B9E\u73B0\u8C03\u6574\u4F4D\u7F6E\u5411\u53F3\u79FB</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>PosSelceted <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> PosSelceted <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> PosSelceted <span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">case</span> BTN_2_Pin<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//\u8BE5\u6309\u94AE\u5B9E\u73B0\u52A0\u65F6</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>PosSelceted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">36000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">36000</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">3600</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">600</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">60</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
          TimeTemp <span class="token operator">+=</span> <span class="token number">3</span><span class="token punctuation">;</span>
          PosSelceted <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> 
          <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      time <span class="token operator">=</span> TimeTemp<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> BTN_4_Pin<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token comment">//\u8BE5\u6309\u94AE\u5B9E\u73B0\u51CF\u65F6</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>PosSelceted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">36000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">-=</span> <span class="token number">36000</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">-=</span> <span class="token number">3600</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">-=</span> <span class="token number">600</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">-=</span> <span class="token number">60</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">-=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging <span class="token operator">&amp;&amp;</span> <span class="token function">CheckArithNum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> TimeTemp <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      time <span class="token operator">=</span> TimeTemp<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">HAL_TIM_PeriodElapsedCallback</span><span class="token punctuation">(</span>TIM_HandleTypeDef <span class="token operator">*</span>htim<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>htim<span class="token operator">-&gt;</span>Instance <span class="token operator">==</span> TIM1<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5B9A\u65F6\u56681\u89E6\u53D1\u7684\u4E2D\u65AD</span>
    time <span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>time <span class="token operator">&gt;=</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span><span class="token punctuation">)</span> time <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>htim<span class="token operator">-&gt;</span>Instance <span class="token operator">==</span> TIM3<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5B9A\u65F6\u56683\u89E6\u53D1\u7684\u4E2D\u65AD</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>isHide <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> isHide <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> isHide <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> num<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>isHide<span class="token punctuation">)</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> PosSelceted<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//10\u8868\u793A\u4E00\u4E2A\u4E71\u7801\u6570</span>
  <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> PosSelceted<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">DrinklePos</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> f_time<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> pos<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token class-name">uint16_t</span> hour <span class="token operator">=</span> f_time <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">,</span> min <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">3600</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">,</span> sec <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span>i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span>hour <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>hour <span class="token operator">/</span> <span class="token number">10</span> <span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span>hour <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>hour <span class="token operator">%</span> <span class="token number">10</span> <span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span>min <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>min <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span>min <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>min <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span>sec <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>sec <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> 
        <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> pos<span class="token punctuation">)</span> <span class="token function">DisplaySegWithHide</span><span class="token punctuation">(</span>sec <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>sec <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* USER CODE END 0 */</span>

<span class="token comment">/**
  * @brief  The application entry point.
  * @retval int
  */</span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">/* USER CODE BEGIN 1 */</span>

  <span class="token comment">/* USER CODE END 1 */</span>

  <span class="token comment">/* MCU Configuration--------------------------------------------------------*/</span>

  <span class="token comment">/* Reset of all peripherals, Initializes the Flash interface and the Systick. */</span>
  <span class="token function">HAL_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">/* USER CODE BEGIN Init */</span>

  <span class="token comment">/* USER CODE END Init */</span>

  <span class="token comment">/* Configure the system clock */</span>
  <span class="token function">SystemClock_Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">/* USER CODE BEGIN SysInit */</span>

  <span class="token comment">/* USER CODE END SysInit */</span>

  <span class="token comment">/* Initialize all configured peripherals */</span>
  <span class="token function">MX_GPIO_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">MX_TIM2_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">MX_USART1_UART_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">MX_USB_DEVICE_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">MX_TIM1_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">MX_TIM3_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">/* Initialize interrupts */</span>
  <span class="token function">MX_NVIC_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* USER CODE BEGIN 2 */</span>
  <span class="token function">HAL_TIM_Base_Start_IT</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>htim1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u542F\u52A8\u5B9A\u65F6\uFFFD????+\u542F\u52A8\u5B9A\u65F6\u5668\u4E2D\uFFFD????</span>
  <span class="token comment">/* USER CODE END 2 */</span>

  <span class="token comment">/* Infinite loop */</span>
  <span class="token comment">/* USER CODE BEGIN WHILE */</span>
  <span class="token comment">// int num = 0;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>isManaging<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">DrinklePos</span><span class="token punctuation">(</span>TimeTemp<span class="token punctuation">,</span> PosSelceted<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// showTime(TimeTemp);</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token function">showTime</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token function">ShowDot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token function">ShowDot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// HAL_Delay(3);</span>
    <span class="token comment">/* USER CODE END WHILE */</span>

    <span class="token comment">/* USER CODE BEGIN 3 */</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* USER CODE END 3 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
  * @brief System Clock Configuration
  * @retval None
  */</span>
<span class="token keyword">void</span> <span class="token function">SystemClock_Config</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  RCC_OscInitTypeDef RCC_OscInitStruct <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  RCC_ClkInitTypeDef RCC_ClkInitStruct <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  RCC_PeriphCLKInitTypeDef PeriphClkInit <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">/** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>OscillatorType <span class="token operator">=</span> RCC_OSCILLATORTYPE_HSE<span class="token punctuation">;</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>HSEState <span class="token operator">=</span> RCC_HSE_ON<span class="token punctuation">;</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>HSEPredivValue <span class="token operator">=</span> RCC_HSE_PREDIV_DIV1<span class="token punctuation">;</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>HSIState <span class="token operator">=</span> RCC_HSI_ON<span class="token punctuation">;</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>PLL<span class="token punctuation">.</span>PLLState <span class="token operator">=</span> RCC_PLL_ON<span class="token punctuation">;</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>PLL<span class="token punctuation">.</span>PLLSource <span class="token operator">=</span> RCC_PLLSOURCE_HSE<span class="token punctuation">;</span>
  RCC_OscInitStruct<span class="token punctuation">.</span>PLL<span class="token punctuation">.</span>PLLMUL <span class="token operator">=</span> RCC_PLL_MUL9<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">HAL_RCC_OscConfig</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>RCC_OscInitStruct<span class="token punctuation">)</span> <span class="token operator">!=</span> HAL_OK<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">Error_Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/** Initializes the CPU, AHB and APB buses clocks
  */</span>
  RCC_ClkInitStruct<span class="token punctuation">.</span>ClockType <span class="token operator">=</span> RCC_CLOCKTYPE_HCLK<span class="token operator">|</span>RCC_CLOCKTYPE_SYSCLK
                              <span class="token operator">|</span>RCC_CLOCKTYPE_PCLK1<span class="token operator">|</span>RCC_CLOCKTYPE_PCLK2<span class="token punctuation">;</span>
  RCC_ClkInitStruct<span class="token punctuation">.</span>SYSCLKSource <span class="token operator">=</span> RCC_SYSCLKSOURCE_PLLCLK<span class="token punctuation">;</span>
  RCC_ClkInitStruct<span class="token punctuation">.</span>AHBCLKDivider <span class="token operator">=</span> RCC_SYSCLK_DIV1<span class="token punctuation">;</span>
  RCC_ClkInitStruct<span class="token punctuation">.</span>APB1CLKDivider <span class="token operator">=</span> RCC_HCLK_DIV2<span class="token punctuation">;</span>
  RCC_ClkInitStruct<span class="token punctuation">.</span>APB2CLKDivider <span class="token operator">=</span> RCC_HCLK_DIV1<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">HAL_RCC_ClockConfig</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>RCC_ClkInitStruct<span class="token punctuation">,</span> FLASH_LATENCY_2<span class="token punctuation">)</span> <span class="token operator">!=</span> HAL_OK<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">Error_Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  PeriphClkInit<span class="token punctuation">.</span>PeriphClockSelection <span class="token operator">=</span> RCC_PERIPHCLK_USB<span class="token punctuation">;</span>
  PeriphClkInit<span class="token punctuation">.</span>UsbClockSelection <span class="token operator">=</span> RCC_USBCLKSOURCE_PLL_DIV1_5<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">HAL_RCCEx_PeriphCLKConfig</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>PeriphClkInit<span class="token punctuation">)</span> <span class="token operator">!=</span> HAL_OK<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token function">Error_Handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/**
  * @brief NVIC Configuration.
  * @retval None
  */</span>
<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">MX_NVIC_Init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">/* EXTI1_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>EXTI1_IRQn<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>EXTI1_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* EXTI2_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>EXTI2_IRQn<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>EXTI2_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* EXTI3_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>EXTI3_IRQn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>EXTI3_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* USB_HP_CAN1_TX_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>USB_HP_CAN1_TX_IRQn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>USB_HP_CAN1_TX_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* USB_LP_CAN1_RX0_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>USB_LP_CAN1_RX0_IRQn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>USB_LP_CAN1_RX0_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* TIM1_UP_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>TIM1_UP_IRQn<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>TIM1_UP_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* TIM2_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>TIM2_IRQn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>TIM2_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* TIM3_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>TIM3_IRQn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>TIM3_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">/* EXTI15_10_IRQn interrupt configuration */</span>
  <span class="token function">HAL_NVIC_SetPriority</span><span class="token punctuation">(</span>EXTI15_10_IRQn<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">HAL_NVIC_EnableIRQ</span><span class="token punctuation">(</span>EXTI15_10_IRQn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* USER CODE BEGIN 4 */</span>

<span class="token comment">/* USER CODE END 4 */</span>

<span class="token comment">/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */</span>
<span class="token keyword">void</span> <span class="token function">Error_Handler</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">/* USER CODE BEGIN Error_Handler_Debug */</span>
  <span class="token comment">/* User can add his own implementation to report the HAL error return state */</span>
  <span class="token function">__disable_irq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token comment">/* USER CODE END Error_Handler_Debug */</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span>  <span class="token expression">USE_FULL_ASSERT</span></span>
<span class="token comment">/**
  * @brief  Reports the name of the source file and the source line number
  *         where the assert_param error has occurred.
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */</span>
<span class="token keyword">void</span> <span class="token function">assert_failed</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>file<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> line<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">/* USER CODE BEGIN 6 */</span>
  <span class="token comment">/* User can add his own implementation to report the file name and line number,
     ex: printf(&quot;Wrong parameters value: file %s on line %d\\r\\n&quot;, file, line) */</span>
  <span class="token comment">/* USER CODE END 6 */</span>
<span class="token punctuation">}</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">/* USE_FULL_ASSERT */</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="seg7-c" tabindex="-1"><a class="header-anchor" href="#seg7-c" aria-hidden="true">#</a> seg7.c:</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;main.h&quot;</span></span>

<span class="token keyword">void</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> num <span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> pos <span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">switch</span><span class="token punctuation">(</span> num <span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token number">0</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">1</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">3</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">4</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">5</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">6</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">7</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">8</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">9</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">default</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>		
	<span class="token punctuation">}</span>
	
	<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_P_GPIO_Port<span class="token punctuation">,</span> SEG_P_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token keyword">switch</span><span class="token punctuation">(</span> pos <span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token number">0</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">1</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">3</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">4</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">5</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token keyword">default</span> <span class="token operator">:</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>		
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">/* 
pos: \u9700\u8981\u4EAE\u5C0F\u6570\u70B9\u7684\u4F4D\u7F6E
 */</span>
<span class="token keyword">void</span> <span class="token function">ShowDot</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> pos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span>pos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_P_GPIO_Port<span class="token punctuation">,</span> SEG_P_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN0_GPIO_Port<span class="token punctuation">,</span> EN0_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN1_GPIO_Port<span class="token punctuation">,</span> EN1_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN2_GPIO_Port<span class="token punctuation">,</span> EN2_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN3_GPIO_Port<span class="token punctuation">,</span> EN3_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN4_GPIO_Port<span class="token punctuation">,</span> EN4_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> EN5_GPIO_Port<span class="token punctuation">,</span> EN5_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_A_GPIO_Port<span class="token punctuation">,</span> SEG_A_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_B_GPIO_Port<span class="token punctuation">,</span> SEG_B_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_C_GPIO_Port<span class="token punctuation">,</span> SEG_C_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_D_GPIO_Port<span class="token punctuation">,</span> SEG_D_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_E_GPIO_Port<span class="token punctuation">,</span> SEG_E_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_F_GPIO_Port<span class="token punctuation">,</span> SEG_F_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_G_GPIO_Port<span class="token punctuation">,</span> SEG_G_Pin<span class="token punctuation">,</span> GPIO_PIN_SET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">HAL_GPIO_WritePin</span><span class="token punctuation">(</span> SEG_P_GPIO_Port<span class="token punctuation">,</span> SEG_P_Pin<span class="token punctuation">,</span> GPIO_PIN_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">break</span> <span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">default</span><span class="token operator">:</span>
		<span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">showTime</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> f_time<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
	<span class="token class-name">uint16_t</span> hour <span class="token operator">=</span> f_time <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">,</span> min <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">3600</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">,</span> sec <span class="token operator">=</span> f_time <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">;</span>
	<span class="token comment">// if(hour &gt; 24) hour = 0;</span>
	<span class="token comment">// else if(min &gt;= 60) min = 0;</span>
	<span class="token comment">// if(sec &gt;= 60) sec = 0;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">switch</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>hour <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>hour <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>min <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>min <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>sec <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token function">ShowNumber</span><span class="token punctuation">(</span>sec <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span><span class="token operator">:</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function _(v,m){const s=o("Mermaid");return p(),e("div",null,[k,a(s,{id:"mermaid-382ee205",code:"flowchart%20LR%0A%09subgraph%20A%5B%22%E8%AE%A1%E6%97%B6%E6%A8%A1%E5%9D%97%22%5D%0A%09direction%20TB%0A%20%20%20%20%20%20%20%20x1(%22some%20operations%22)%20--%3E%20%0A%20%20%20%20%20%20%20%20x2(%22...%22)%20--%3E%20%0A%20%20%20%20%20%20%20%20x3(%22%E8%AE%B0%E5%BD%95%E5%BD%93%E5%89%8D%E7%BB%8F%E8%BF%87%E7%9A%84%E6%80%BB%E7%A7%92%E6%95%B0time%22)%0A%09end%0A%09subgraph%20B%5B%22%E8%AF%91%E7%A0%81%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9D%97%22%5D%0A%09direction%20TB%0A%20%20%20%20%20%20%20%20y1(%22some%20operations%22)%20--%3E%20y2(%22...%22)%20--%3E%0A%20%20%20%20%20%20%20%20y3(%22%E8%B0%83%E7%94%A8HAL%E5%BA%93%E5%87%BD%E6%95%B0%E6%8E%A7%E5%88%B6%E6%95%B0%E7%A0%81%E7%AE%A1%E4%BA%AE%E7%81%AD%22)%20%20%20%20%0A%09end%0A%09subgraph%20C%5B%22%E6%97%B6%E9%97%B4%E6%A0%A1%E5%87%86%E6%A8%A1%E5%9D%97%22%5D%0A%09direction%20TB%0A%20%20%20%20%20%20%20%20Z1(%22some%20operations%22)%20--%3E%20%0A%20%20%20%20%20%20%20%20Z2(%22...%22)%20--%3E%20%20%0A%20%20%20%20%20%20%20%20z3(%22%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8Ftime%E8%A2%AB%E4%BF%AE%E6%94%B9%22)%0A%09end%0A%09%0A%09a1(%225%E7%A7%8D%E6%8C%89%E9%94%AE%22)%20--%3E%20C%0A%09time%20--%3E%20C%20--%3E%7Ctime%7C%20B%0A%09A%20--%3E%20time%20--%3E%20B%0A"}),r,a(s,{id:"mermaid-64a56f6c",code:"flowchart%20LR%0A%09subgraph%20A%5B%22%E8%AF%91%E7%A0%81%E6%98%BE%E7%A4%BA%E6%A8%A1%E5%9D%97%22%5D%0A%09direction%20TB%0A%20%20%20%20%20%20%20%20x1(%22%E5%B0%86time%E6%8D%A2%E7%AE%97%E6%88%90%E4%B8%89%E4%B8%AA%E6%95%B0%EF%BC%9A%E6%97%B6%E5%88%86%E7%A7%92%22)%20--%3E%20%0A%20%20%20%20%20%20%20%20x2(%22hour%20%3D%20time%20%2F%203600%2C%20min%20%3D%20time%20%25%203600%20%2F%2060%2C%20sec%20%3D%20time%20%25%2060%3B%22)%20--%3E%20%0A%20%20%20%20%20%20%20%20x3(%22%E5%88%86%E5%88%AB%E8%AF%91%E7%A0%81%E6%98%BE%E7%A4%BAhour%2Cmin%2Csec%22)%20--%3E%0A%20%20%20%20%20%20%20%20x4(%22ShowNumber(hour%20%2F%2010%2C%200)%3B%0A%20%20%20%20%20%20%20%20ShowNumber(hour%20%25%2010%2C%201)%3B%0A%20%20%20%20%20%20%20%20ShowNumber(min%20%2F%2010%2C%202)%3B%0A%20%20%20%20%20%20%20%20ShowNumber(min%20%25%2010%2C%203)%3B%0A%20%20%20%20%20%20%20%20ShowNumber(sec%20%2F%2010%2C%204)%3B%0A%20%20%20%20%20%20%20%20ShowNumber(sec%20%25%2010%2C%205)%3B%22)%0A%09end%0A%09%0A%09time%20--%3E%20A%0A"}),d])}const E=t(l,[["render",_],["__file","\u7535\u5B50\u65F6\u949F.html.vue"]]);export{E as default};
