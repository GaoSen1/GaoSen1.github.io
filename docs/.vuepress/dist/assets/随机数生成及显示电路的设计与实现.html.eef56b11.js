import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as l,d as t,f as e,a as s,b as n,r as c}from"./app.a5c6b9ea.js";const r="/assets/image-20220602181033266.84746c40.png",i="/assets/image-20220602185634561.2d2ccbb9.png",u="/assets/image-20220602225112266.1d97721e.png",m="/assets/image-20220602224938100.576c6ccd.png",k="/assets/image-20220602225200053.dcd4b3b5.png",d="/assets/image-20220602225226508.7cc42e68.png",v="/assets/image-20220602225246364.74d72eeb.png",h="/assets/image-20220602200631559.8d484ba5.png",g="/assets/image-20220602200815209.03e262fd.png",b="/assets/image-20220602202051320.07c3fc20.png",y="/assets/image-20220602203300776.3b934550.png",w="/assets/image-20220602203738759.1dfa4fec.png",q="/assets/image-20220602204050164.c24ed34a.png",_="/assets/image-20220602212130607.aed26236.png",f="/assets/image-20220602220550763.634d56fb.png",x={},z=e('<h2 id="\u5B9E\u9A8C\u4EFB\u52A1\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9A8C\u4EFB\u52A1\u9898\u76EE" aria-hidden="true">#</a> \u5B9E\u9A8C\u4EFB\u52A1\u9898\u76EE</h2><p>\u7528VHDL\u8BED\u8A00\u5B9E\u73B0\u4E00\u4E2A\u5E26\u590D\u4F4D\u529F\u80FD\u7684\u4E09\u4F4D\u968F\u673A\u6570\u4EA7\u751F\u548C\u663E\u793A\u7535\u8DEF\uFF0C\u5177\u4F53\u529F\u80FD\u5982\u4E0B\uFF1A</p><ul><li><p>\u5728\u6570\u7801\u7BA1 DISP7-DISP3 \u4E0A\u7A33\u5B9A\u663E\u793A\u73ED\u7EA7\u548C\u73ED\u5185\u5E8F\u53F7\uFF0C\u5982\uFF1A 201 \u73ED 1\u53F7\u540C\u5B66\u663E\u793A\u201C20101\u201D\uFF1B\u540C\u65F6\u5728\u6570\u7801\u7BA1 DISP2-DISP0 \u4E0A\u663E\u793A\u4E09\u4F4D\u968F\u673A\u6570\uFF0C\u663E\u793A\u7684\u968F\u673A\u6570\u5185\u5BB9\u6BCF2\u79D2\u53D8\u6362\u4E00\u6B21\uFF1B</p></li><li><p>\u4E00\u4E2ABTN\u7528\u4F5C\u590D\u4F4D\u952E\uFF0C\u6309\u52A8\u590D\u4F4D\u952E\u540E\uFF0C\u6570\u7801\u7BA1 DISP2-DISP0\u663E\u793A\u4E3A\u201C000\u201D\uFF0C2\u79D2\u540E\u518D\u6B21\u8FDB\u5165\u968F\u673A\u6570\u663E\u793A\u548C2\u79D2\u5207\u6362\u7684\u6A21\u5F0F\uFF0C \u800CDISP7-DISP3 \u4E0A\u663E\u793A\u7684\u5185\u5BB9\u4E0D\u53D8\u3002</p></li><li><p>\u8F93\u5165\u65F6\u949F1MHz\u3002</p></li></ul><p>\u6CE8\u610F\uFF1A\u6BCF\u6B21\u6E05\u96F6\u540E\u91CD\u65B0\u5F00\u59CB\u663E\u793A\u7684\u968F\u673A\u6570\u4E0D\u80FD\u4E0E\u4E0A\u6B21\u6E05\u96F6\u540E\u7684\u968F\u673A\u6570\u76F8\u540C\u3002</p><h2 id="\u5BF9\u5B9E\u9A8C\u4EFB\u52A1\u7684\u7406\u89E3\u4E0E\u601D\u8003" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u5B9E\u9A8C\u4EFB\u52A1\u7684\u7406\u89E3\u4E0E\u601D\u8003" aria-hidden="true">#</a> \u5BF9\u5B9E\u9A8C\u4EFB\u52A1\u7684\u7406\u89E3\u4E0E\u601D\u8003</h2><blockquote><p><strong>\u5173\u4E8E\u968F\u673A\u548C\u4F2A\u968F\u673A</strong></p><ul><li>\u5355\u7EAF\u7684\u6570\u5B66\u7B97\u6CD5\u53EA\u80FD\u4EA7\u751F\u4F2A\u968F\u673A\u6570 <ul><li>\u5229\u7528<strong>M\u5E8F\u5217\u53D1\u751F\u5668</strong>\u4EA7\u751F\u4F2A\u968F\u673A\u6570</li></ul></li><li>\u8981\u4EA7\u751F\u771F\u968F\u673A\u6570\uFF0C\u5FC5\u987B\u8981\u6709<strong>\u7269\u7406\u968F\u673A\u6E90</strong>\u7684\u53C2\u4E0E <ul><li>\u4E24\u6B21\u6309\u952E\u4E4B\u95F4\u7684\u65F6\u95F4\u95F4\u9694</li><li>\u6309\u952E\u88AB\u6309\u4E0B\u7684\u5BBD\u5EA6\u6216\u6296\u52A8\u7684\u5BBD\u5EA6</li></ul></li></ul></blockquote><h3 id="m\u5E8F\u5217\u4EA7\u751F\u4F2A\u968F\u673A\u6570" tabindex="-1"><a class="header-anchor" href="#m\u5E8F\u5217\u4EA7\u751F\u4F2A\u968F\u673A\u6570" aria-hidden="true">#</a> M\u5E8F\u5217\u4EA7\u751F\u4F2A\u968F\u673A\u6570</h3><p>M\u5E8F\u5217\u7684\u957F\u5EA6M=2<sup>k</sup>-1,\u5176\u4E2Dk\u662F\u79FB\u5B58\u5668\u7684\u4F4D\u6570\u3002</p><p>\u53CD\u9988\u7535\u8DEF\u662F\u67D0\u4E9B\u89E6\u53D1\u5668\u8F93\u51FA\u7684<strong>\u5F02\u6216</strong>\u52A0\u4E0A\u6821\u6B63\u9879\uFF0C\u6821\u6B63\u9879\u662F\u5148\u5C06k\u4E2A\u89E6\u53D1\u5668\u7684\u8F93\u51FA\u201C<strong>\u6216\u975E</strong>\u201D\uFF0C\u518D\u5C06\u8FD9\u4E2A\u6216\u975E\u7ED3\u679C\u548C\u539F\u6765\u7684\u53CD\u9988\u8F93\u51FA\u518D\u6B21\u8FDB\u884C\u201C\u5F02\u6216\u201D\u8FD0\u7B97:</p>',9),M=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"D"),s("mn",null,"0")]),s("mo",null,"="),s("msub",null,[s("mi",null,"D"),s("mn",null,"0")]),s("mo",null,"\u2295"),s("mover",{accent:"true"},[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mrow",null,[s("mi",null,"K"),s("mo",null,"\u2212"),s("mn",null,"1")])]),s("mo",null,"+"),s("msub",null,[s("mi",null,"Q"),s("mrow",null,[s("mi",null,"K"),s("mo",null,"\u2212"),s("mn",null,"2")])]),s("mo",null,"+"),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mi",{mathvariant:"normal"},"."),s("mo",null,"+"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"2")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"1")]),s("mo",null,"+"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"0")])]),s("mo",{stretchy:"true"},"\u203E")])]),s("annotation",{encoding:"application/x-tex"}," D_0=D_0 \\oplus\\overline{Q_{K-1} + Q_{K-2} + ... +Q_{2} + Q_{1} + Q_{0}} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0917em","vertical-align":"-0.2083em"}}),s("span",{class:"mord overline"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8833em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"K"),s("span",{class:"mbin mtight"},"\u2212"),s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"..."),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"0")])])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.8033em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"overline-line",style:{"border-bottom-width":"0.04em"}})])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])])])])])],-1),A=s("p",null,"M\u5E8F\u5217\u53D1\u751F\u5668\u7684\u8BBE\u8BA1\u5DF2\u7ECF\u5B9A\u578B\u5316\uFF0C\u4E00\u822C\u53EA\u9700\u67E5\u8868\u5373\u53EF\u3002",-1),Q=s("table",null,[s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"center"}},"k"),s("th",{style:{"text-align":"center"}},[n("M=2"),s("sup",null,"k"),n("-1_1")]),s("th",{style:{"text-align":"center"}},"\u53CD\u9988\u51FD\u6570")])]),s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"center"}},"3"),s("td",{style:{"text-align":"center"}},"7"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mn",null,"0")]),s("mo",null,"\u2295"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"Q_0\\oplus Q_2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("\u6216"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mn",null,"1")]),s("mo",null,"\u2295"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"Q_1\\oplus Q_2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])]),s("tr",null,[s("td",{style:{"text-align":"center"}},"4"),s("td",{style:{"text-align":"center"}},"15"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mn",null,"0")]),s("mo",null,"\u2295"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"Q_0\\oplus Q_3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("\u6216"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mn",null,"2")]),s("mo",null,"\u2295"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"3")])]),s("annotation",{encoding:"application/x-tex"},"Q_2\\oplus Q_3")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"3")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])]),s("tr",null,[s("td",{style:{"text-align":"center"}},"5"),s("td",{style:{"text-align":"center"}},"31"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mn",null,"1")]),s("mo",null,"\u2295"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"4")])]),s("annotation",{encoding:"application/x-tex"},"Q_1\\oplus Q_4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("\u6216"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Q"),s("mn",null,"2")]),s("mo",null,"\u2295"),s("msub",null,[s("mi",null,"Q"),s("mn",null,"4")])]),s("annotation",{encoding:"application/x-tex"},"Q_2\\oplus Q_4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\u2295"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"4")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])]),s("tr",null,[s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"\u22EF")]),s("annotation",{encoding:"application/x-tex"},"\\cdots")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.313em"}}),s("span",{class:"minner"},"\u22EF")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"\u22EF")]),s("annotation",{encoding:"application/x-tex"},"\\cdots")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.313em"}}),s("span",{class:"minner"},"\u22EF")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"\u22EF")]),s("annotation",{encoding:"application/x-tex"},"\\cdots")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.313em"}}),s("span",{class:"minner"},"\u22EF")])])])])])])],-1),E=e(`<h3 id="\u4EA7\u751F\u968F\u673A\u6570\u7684\u5173\u952Evhdl\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EA7\u751F\u968F\u673A\u6570\u7684\u5173\u952Evhdl\u4EE3\u7801" aria-hidden="true">#</a> \u4EA7\u751F\u968F\u673A\u6570\u7684\u5173\u952Evhdl\u4EE3\u7801\uFF1A</h3><div class="language-vhdl ext-vhdl line-numbers-mode"><pre class="language-vhdl"><code><span class="token keyword">architecture</span> rtl <span class="token keyword">of</span> D201GS10_RandomNumber <span class="token keyword">is</span>    
	<span class="token keyword">signal</span> feedback <span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
    <span class="token keyword">signal</span> q_temp <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- is for M sequence</span>
	randomNum1<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>q_temp<span class="token operator">=</span><span class="token vhdl-vectors number">&quot;000000000000&quot;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> feedback <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> feedback <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
    
    randomNum2<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>clk<span class="token punctuation">,</span>feedback<span class="token punctuation">,</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token comment">-- clk&#39;s period should be 2s,freq=0.5Hz;it is from 1kHz divider 2000</span>
        <span class="token keyword">if</span> clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span> 
			q_temp <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> feedback<span class="token punctuation">;</span>      
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D<code>q_temp &lt;= q_temp(10 downto 0) &amp; feedback;</code>\u8868\u793A\u5C06q_temp\u76840\u523010\u4F4D\u4E0Efeedback\u8FDE\u63A5\uFF0C\u518D\u8D4B\u503C\u7ED9q_temp\u3002</p><h2 id="\u7535\u8DEF\u7684\u6A21\u5757\u5212\u5206\u53CA\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#\u7535\u8DEF\u7684\u6A21\u5757\u5212\u5206\u53CA\u4F5C\u7528" aria-hidden="true">#</a> \u7535\u8DEF\u7684\u6A21\u5757\u5212\u5206\u53CA\u4F5C\u7528</h2><p>\u7535\u8DEF\u53EF\u5212\u5206\u4E3A\u4EE5\u4E0B\u516D\u4E2A\u6A21\u5757\uFF1A</p><h3 id="\u8BA1\u6570\u5668-count8" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u5668-count8" aria-hidden="true">#</a> \u8BA1\u6570\u5668(count8)</h3>`,6),D=s("p",null,"\u6A21\u503C\u4E3A8\uFF0C\u5176\u4F5C\u7528\u4E3A\u52A8\u6001\u626B\u63CF8\u4E2A\u6570\u7801\u7BA1\u30028\u4E2A\u6570\u7801\u7BA1\u7684\u63A7\u5236\u7AEF\u53E3\u4E3A",-1),L=s("ul",null,[s("li",null,"\u6BB5\u7801\uFF1Aseg(7 downto 0)"),s("li",null,"\u4F4D\u7801\uFF1Acat(7 downto 0)")],-1),R=s("p",null,'\u5728\u67D0\u4E00\u786E\u5B9A\u7684\u65F6\u523B\uFF0C\u53EA\u6709\u4E00\u4E2A\u6570\u7801\u7BA1\u4EAE\uFF0C\u5373\u4EFB\u610F\u65F6\u523B\u4F4D\u7801\u53EA\u542B\u4E00\u4E2A"0"\uFF1B\u7531\u4E8E\u4EBA\u773C\u7684\u89C6\u89C9\u6682\u7559\u73B0\u8C61\uFF0C\u4EBA\u773C\u89C2\u5BDF\u52308\u4E2A\u6570\u7801\u7BA1\u201C\u540C\u65F6\u663E\u793A\u201D\u3002',-1),N=s("p",null,"\u626B\u63CF\u7684\u9891\u7387\uFF0C\u5373\u8BA1\u6570\u5668\u53D8\u5316\u7684\u9891\u7387\uFF0C\u9700\u6EE1\u8DB3",-1),B=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mo",null,"\u2265"),s("mi",null,"N"),s("mo",null,"\xD7"),s("msub",null,[s("mi",null,"f"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"}," f \u2265 N \xD7 f_0 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"\u2265"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"\xD7"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1076em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])],-1),S=s("p",null,[n("\u5176\u4E2D"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"f"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"f_0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1076em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" \u4E3A "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"50"),s("mi",null,"H"),s("mi",null,"z")]),s("annotation",{encoding:"application/x-tex"},"50Hz")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord"},"50"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"Hz")])])]),n(" \uFF0C\u5728\u8BE5\u5B9E\u9A8C\u677F\u4E2D\uFF0C"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"},"N")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),n("= 8\u3002"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"f"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"f_0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1076em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"\u200B")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("\u53D6 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1"),s("mi",null,"k"),s("mi",null,"H"),s("mi",null,"z")]),s("annotation",{encoding:"application/x-tex"},"1kHz")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.04398em"}},"Hz")])])]),n(" \u663E\u7136\u6EE1\u8DB3\u8981\u6C42\u3002")],-1),H=s("h3",{id:"\u6309\u952E\u6D88\u6296-debouncing",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6309\u952E\u6D88\u6296-debouncing","aria-hidden":"true"},"#"),n(" \u6309\u952E\u6D88\u6296(debouncing)")],-1),C=e('<p>\u5B83\u7684\u4F5C\u7528\u9664\u4E86\u6807\u9898\u6240\u8A00\u6D88\u6296\uFF0C\u8FD8\u6709\uFF1A\u6309\u952E\u4E00\u65E6\u88AB\u6309\u4E0B\uFF08\u4E0D\u7BA1\u6709\u6CA1\u6709\u5F39\u5F00\uFF09\u540E\uFF0C2s\u5185\u4FDD\u6301btnout\u8F93\u51FA\u9AD8\u7535\u5E73\u201C1\u201D\uFF0C\u4F7F\u663E\u793A\u8BD1\u7801\u7684\u968F\u673A\u6570\u90E8\u5206\u590D\u4F4D\u4FDD\u63012s\u518D\u53D8\u5316\u3002</p><p>\u6D88\u6296\u7684\u539F\u7406\u5982\u4E0B\uFF1A</p><p><img src="'+r+'" alt="image-20220602181033266" loading="lazy"></p><p><img src="'+i+'" alt="image-20220602185634561" loading="lazy"></p><p>\u6B64\u5904\u4F7F\u7528\u8BA1\u6570\u6CD5\u6D88\u6296\uFF0C\u8BA1\u6570\u5668\u5728btn\u4E3A\u201C1\u201D\u65F6\uFF0C\u5BF9\u6BEB\u79D2\u4FE1\u53F7\u8BA1\u6570\uFF0C\u8BA1\u6570\u503C\u4FDD\u5B58\u5728num\u4E2D\u3002\u68C0\u6D4Bnum\u7684\u503C\uFF0C\u53EA\u6709\u5B83\u5927\u4E8E\u67D0\u4E00\u6570\u503C\uFF08\u598230\uFF09\u65F6\uFF0Cbtnout\u624D\u8F93\u51FA\u201C1\u201D\uFF0C\u5426\u5219\u8F93\u51FA\u201C0\u201D\u3002</p><blockquote><p><strong>\u6CE8\u610F</strong></p><p>\u6309\u952E\u590D\u4F4D\u65F6\u5E94\u5F15\u5165\u4E00\u8BA1\u6570\u503Cnum\uFF0C\u63A7\u5236btnout\u8F93\u51FA\u9AD8\u7535\u5E732s\u3002</p></blockquote><h3 id="\u5206\u9891\u5668-divider2000" tabindex="-1"><a class="header-anchor" href="#\u5206\u9891\u5668-divider2000" aria-hidden="true">#</a> \u5206\u9891\u5668(divider2000)</h3>',7),I=s("p",null,"\u5B83\u7684\u4F5C\u7528\u662F\u6839\u636E\u8F93\u5165\u76841kHz\u4FE1\u53F7\u83B7\u5F97\u5468\u671F\u4E3A2s\u7684\u65F6\u949F\u4FE1\u53F7\uFF0C\u76F4\u63A5\u6216\u95F4\u63A5\u5730\u4F7F\u663E\u793A\u7684\u968F\u673A\u6570\u4EE52s\u7684\u5468\u671F\u5207\u6362\u3002\u5206\u9891\u5668\u7684\u57FA\u672C\u539F\u7406\u662F\u5BF9\u8F93\u5165\u4FE1\u53F7\u8BA1\u6570\uFF0C\u5F53\u8BA1\u6570\u503C\u8FBE\u5230\u8BBE\u5B9A\u503C\u65F6\u8BA9\u8F93\u51FA\u4FE1\u53F7\u7FFB\u8F6C\u3002\u6B64\u5904\u662F2000\u5206\u9891\uFF0C\u8BA1\u6570\u503Cnum\u4E0A\u9650\u662F999\u3002",-1),P=s("blockquote",null,[s("p",null,[s("strong",null,"\u6CE8\u610F")]),s("p",null,"\u6309\u952E\u590D\u4F4D\u968F\u673A\u6570\u65F6\uFF0C\u8BE5\u5206\u9891\u4FE1\u53F7\u4E5F\u5E94\u8BE5\u6E05\u96F6\uFF01\u4E14\u8BA1\u6570\u503Cnum\u4E0D\u662F\u8D4B\u521D\u503C0\uFF0C\u800C\u662F\u8D4B\u521D\u503C-999\uFF01\u5426\u5219\u6E05\u96F6\u65F6\u7684\u201C000\u201D\u663E\u793A\u65F6\u95F4\u4E0D\u8DB32s\uFF0C\u6E05\u96F6\u540E\u7684\u7B2C\u4E00\u6B21\u968F\u673A\u6570\u663E\u793A\u4EA6\u4E0D\u8DB32s\uFF01")],-1),G=s("h3",{id:"m\u5E8F\u5217\u53D1\u751F\u5668-randomnumber",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#m\u5E8F\u5217\u53D1\u751F\u5668-randomnumber","aria-hidden":"true"},"#"),n(" M\u5E8F\u5217\u53D1\u751F\u5668(RandomNumber)")],-1),K=s("p",null,"\u5B83\u7684\u4F5C\u7528\u662F\u4EA7\u751F\u4E00\u7EC4\u4E8C\u8FDB\u5236\uFF08\u4F2A\uFF09\u968F\u673A\u6570\uFF0C\u8FD9\u91CC\u53D6\u5176\u4E2D\u768412\u4F4D\u3002",-1),V=s("blockquote",null,[s("p",null,[s("strong",null,"\u4E3A\u4EC0\u4E48\u53D612\u4F4D\uFF1F")]),s("p",null,"\u6570\u7801\u7BA1\u4E0A\u663E\u793A\u7684\u4E09\u4F4D\u968F\u673A\u6570\uFF0C\u6BCF\u4E00\u4F4D\u90FD\u662F\u5341\u8FDB\u5236\uFF080~9\uFF09\uFF0C\u6BCF\u4E00\u4F4D\u5341\u8FDB\u5236\u6570\u6700\u5C11\u9700\u56DB\u4F4D\u4E8C\u8FDB\u5236\u6570\u6765\u8868\u793A\uFF0C\u5982\u63098421BCD\u7801\uFF0C0001\u8868\u793A1,0111\u8868\u793A7\u3002"),s("p",null,"\u5728\u663E\u793A\u8BD1\u7801\u65F6\u518D\u628A\u8FD912\u4F4D\u5207\u5272\u62103\u4E2A4\u4F4D\uFF0C\u5206\u522B\u8BD1\u7801\u3002"),s("p",null,"\u53E6\u5916\u6309\u952E\u590D\u4F4D\u65F6\uFF0C\u4E5F\u4E0D\u8981\u6E05M\u5E8F\u5217\uFF0CM\u5E8F\u5217\u5E94\u4F7F\u7528\u9AD8\u9891\u4FE1\u53F7\uFF0C\u4FDD\u8BC1\u968F\u673A\u6570\u53D8\u5316\u8DB3\u591F\u5FEB\uFF0C\u590D\u4F4D\u540E\u7684\u7B2C\u4E00\u6B21\u968F\u673A\u6570\u663E\u793A\u624D\u4E0D\u4F1A\u4E0E\u4E0A\u4E00\u6B21\u91CD\u590D\u3002")],-1),O=s("h3",{id:"transfer",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#transfer","aria-hidden":"true"},"#"),n(" transfer")],-1),U=s("p",null,[n("\u5B83\u7684\u4F5C\u7528\u4EC5\u662F\u5C06\u4ECE\u4E4B\u524D\u7684M\u5E8F\u5217\u53D1\u751F\u5668\u7684\u5F97\u5230\u7684\u968F\u673A\u6570\u518D\u8D4B\u7ED9\u53E6\u4E00\u4FE1\u53F7\uFF08\u53D8\u91CF\uFF09\uFF0C\u5173\u952E\u662F\u8FD9\u4E00\u64CD\u4F5C"),s("strong",null,"\u6BCF\u96942s\u6267\u884C\u4E00\u6B21"),n("\uFF0C\u8FD9\u6837\u5C31\u80FD\u5B9E\u73B0\u6BCF\u96942s\u66F4\u65B0\u4E00\u6B21\u6570\u7801\u7BA1\u663E\u793A\u7684\u968F\u673A\u6570\u3002")],-1),T=s("h3",{id:"\u663E\u793A\u8BD1\u7801-decode",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u663E\u793A\u8BD1\u7801-decode","aria-hidden":"true"},"#"),n(" \u663E\u793A\u8BD1\u7801(decode)")],-1),j=s("h2",{id:"\u603B\u4F53\u903B\u8F91\u7ED3\u6784\u56FE-\u8BE6\u7EC6\u51C6\u786E\u6807\u6CE8\u7AEF\u53E3\u53CA\u5185\u90E8\u4FE1\u53F7",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u603B\u4F53\u903B\u8F91\u7ED3\u6784\u56FE-\u8BE6\u7EC6\u51C6\u786E\u6807\u6CE8\u7AEF\u53E3\u53CA\u5185\u90E8\u4FE1\u53F7","aria-hidden":"true"},"#"),n(" \u603B\u4F53\u903B\u8F91\u7ED3\u6784\u56FE\uFF08\u8BE6\u7EC6\u51C6\u786E\u6807\u6CE8\u7AEF\u53E3\u53CA\u5185\u90E8\u4FE1\u53F7\uFF09")],-1),F=e(`<h2 id="vhdl\u4EE3\u7801\u622A\u56FE\u53CA\u7F16\u8BD1\u6210\u529F\u622A\u56FE" tabindex="-1"><a class="header-anchor" href="#vhdl\u4EE3\u7801\u622A\u56FE\u53CA\u7F16\u8BD1\u6210\u529F\u622A\u56FE" aria-hidden="true">#</a> VHDL\u4EE3\u7801\u622A\u56FE\u53CA\u7F16\u8BD1\u6210\u529F\u622A\u56FE</h2><h3 id="vhdl\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#vhdl\u4EE3\u7801" aria-hidden="true">#</a> vhdl\u4EE3\u7801:</h3><div class="language-vhdl ext-vhdl line-numbers-mode"><pre class="language-vhdl"><code> <span class="token keyword">library</span> ieee<span class="token punctuation">;</span>
<span class="token keyword">use</span> ieee<span class="token punctuation">.</span>std_logic_1164<span class="token punctuation">.</span><span class="token keyword">all</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> ieee<span class="token punctuation">.</span>std_logic_unsigned<span class="token punctuation">.</span><span class="token keyword">all</span><span class="token punctuation">;</span>

<span class="token keyword">entity</span> D201GS10_RandomNumber <span class="token keyword">is</span>
    <span class="token keyword">port</span> <span class="token punctuation">(</span>
        clk   <span class="token punctuation">:</span> <span class="token keyword">in</span> std_logic<span class="token punctuation">;</span>
        btn <span class="token punctuation">:</span> <span class="token keyword">in</span> std_logic<span class="token punctuation">;</span>
        seg<span class="token punctuation">:</span> <span class="token keyword">out</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cat<span class="token punctuation">:</span> <span class="token keyword">out</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token comment">-- qotmp: out std_logic_vector(3 downto 0);</span>
        <span class="token comment">-- qstmp: out std_logic_vector(3 downto 0);</span>
        <span class="token comment">-- qttmp: out std_logic_vector(3 downto 0)</span>
        <span class="token comment">-- numtmp: out integer range 0 to 1999; -- is for debouncing</span>
        <span class="token comment">-- q: out std_logic_vector(11 downto 0);</span>
        <span class="token comment">-- btnout_temp: out std_logic;</span>
        <span class="token comment">-- clktmp: out std_logic</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">end</span> <span class="token keyword">entity</span><span class="token punctuation">;</span>

<span class="token keyword">architecture</span> rtl <span class="token keyword">of</span> D201GS10_RandomNumber <span class="token keyword">is</span>
    <span class="token keyword">signal</span> feedback <span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
    <span class="token keyword">signal</span> q_temp <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- is for M sequence</span>
    <span class="token keyword">signal</span> q_temp4 <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- is for M sequence</span>
    <span class="token keyword">signal</span> q_temp2 <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg</span>
    <span class="token keyword">signal</span> qo <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg M sequence</span>
    <span class="token keyword">signal</span> qs <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg M sequence</span>
    <span class="token keyword">signal</span> qt <span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:=</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span><span class="token punctuation">;</span> <span class="token comment">-- is for count8/seg M sequence</span>
    <span class="token comment">-- signal q_temp3 : std_logic_vector(2 downto 0) := &quot;000&quot;; -- is for debouncing</span>
    <span class="token keyword">signal</span> clk_2s <span class="token punctuation">:</span> std_logic <span class="token operator">:=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>
    
    <span class="token keyword">signal</span> btnout <span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
    <span class="token keyword">signal</span> num<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token number">99</span><span class="token punctuation">;</span> <span class="token comment">-- is for debouncing</span>
    <span class="token keyword">signal</span> num4<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token number">1999</span><span class="token punctuation">;</span> <span class="token comment">-- is for debouncing</span>
    <span class="token keyword">signal</span> num2<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token operator">-</span><span class="token number">999</span> <span class="token keyword">to</span> <span class="token number">999</span><span class="token punctuation">;</span> <span class="token comment">-- is for divider2000</span>
    <span class="token keyword">signal</span> num3<span class="token punctuation">:</span> integer <span class="token keyword">range</span> <span class="token number">0</span> <span class="token keyword">to</span> <span class="token number">999</span><span class="token punctuation">;</span> <span class="token comment">-- is for divider2000</span>
    <span class="token keyword">signal</span> seg_temp<span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">signal</span> cat_temp<span class="token punctuation">:</span> <span class="token function">std_logic_vector</span><span class="token punctuation">(</span><span class="token number">7</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">signal</span> flag<span class="token punctuation">:</span> std_logic<span class="token punctuation">;</span>
<span class="token keyword">begin</span>
	divider<span class="token punctuation">:</span> <span class="token keyword">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">,</span>clk_2s<span class="token punctuation">,</span>num2<span class="token punctuation">,</span>num3<span class="token punctuation">,</span>btnout<span class="token punctuation">)</span> <span class="token keyword">begin</span>
		<span class="token keyword">if</span> clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>btnout <span class="token operator">=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> num2 <span class="token operator">&lt;=</span> <span class="token operator">-</span><span class="token number">999</span><span class="token punctuation">;</span>clk_2s <span class="token operator">&lt;=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>
			<span class="token keyword">elsif</span> num2 <span class="token operator">=</span> <span class="token number">999</span> <span class="token keyword">then</span> <span class="token comment">--*2=divider num</span>
				num2 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>clk_2s <span class="token operator">&lt;=</span> <span class="token operator">not</span> clk_2s<span class="token punctuation">;</span>
			<span class="token keyword">else</span>
				num2 <span class="token operator">&lt;=</span> num2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
		<span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
	<span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    debouncing1<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>clk<span class="token punctuation">,</span>btn<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span> <span class="token function">rising_edge</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span> btn<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span>
                <span class="token keyword">if</span> num <span class="token operator">=</span> <span class="token number">99</span> <span class="token keyword">then</span> num <span class="token operator">&lt;=</span> <span class="token number">99</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> num <span class="token operator">&lt;=</span> num<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> 
                num <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
      <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
      
    debouncing2<span class="token punctuation">:</span> <span class="token keyword">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">,</span>num<span class="token punctuation">,</span>btnout<span class="token punctuation">,</span>num4<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span> <span class="token function">rising_edge</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span> num <span class="token operator">&gt;</span> <span class="token number">30</span> <span class="token keyword">then</span> btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>num4 <span class="token operator">&lt;=</span> num4 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">elsif</span><span class="token punctuation">(</span>num4 <span class="token operator">&lt;</span> <span class="token number">1999</span> <span class="token operator">and</span> num4 <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">then</span> num4 <span class="token operator">&lt;=</span> num4 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">elsif</span><span class="token punctuation">(</span>num4 <span class="token operator">=</span> <span class="token number">1999</span><span class="token punctuation">)</span> <span class="token keyword">then</span> btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>num4 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> btnout <span class="token operator">&lt;=</span> <span class="token number">&#39;0&#39;</span><span class="token punctuation">;</span>num4 <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    randomNum1<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>q_temp<span class="token operator">=</span><span class="token vhdl-vectors number">&quot;000000000000&quot;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> feedback <span class="token operator">&lt;=</span> <span class="token number">&#39;1&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> feedback <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">xor</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>
    
    randomNum2<span class="token punctuation">:</span> <span class="token keyword">process</span> <span class="token punctuation">(</span>clk<span class="token punctuation">,</span>feedback<span class="token punctuation">,</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token comment">-- clk&#39;s period should be 2s,freq=0.5Hz;it is from 1kHz divider 2000</span>
        <span class="token keyword">if</span> clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span> <span class="token keyword">then</span> 
			q_temp <span class="token operator">&lt;=</span> <span class="token function">q_temp</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token keyword">downto</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> feedback<span class="token punctuation">;</span>      
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    count8<span class="token punctuation">:</span><span class="token keyword">process</span><span class="token punctuation">(</span>clk<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>clk<span class="token attribute attr-name">&#39;event</span> <span class="token operator">and</span> clk<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
            <span class="token keyword">if</span> q_temp2 <span class="token operator">=</span> <span class="token vhdl-vectors number">&quot;111&quot;</span> <span class="token keyword">then</span> q_temp2 <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;000&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> 
                q_temp2 <span class="token operator">&lt;=</span> q_temp2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    transfer<span class="token punctuation">:</span> <span class="token keyword">process</span><span class="token punctuation">(</span>clk_2s<span class="token punctuation">,</span>q_temp4<span class="token punctuation">,</span>q_temp<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">rising_edge</span><span class="token punctuation">(</span>clk_2s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">then</span> q_temp4 <span class="token operator">&lt;=</span> q_temp<span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span><span class="token punctuation">;</span>

    decode<span class="token punctuation">:</span><span class="token keyword">process</span><span class="token punctuation">(</span>qo<span class="token punctuation">,</span>qs<span class="token punctuation">,</span>qt<span class="token punctuation">,</span>q_temp4<span class="token punctuation">,</span>q_temp2<span class="token punctuation">,</span>btnout<span class="token punctuation">)</span> <span class="token keyword">begin</span>
        qo <span class="token operator">&lt;=</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qs <span class="token operator">&lt;=</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qt <span class="token operator">&lt;=</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token function">q_temp4</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> q_temp2 <span class="token keyword">is</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01111111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--2</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11101111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;100&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110111&quot;</span><span class="token punctuation">;</span>seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;101&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111011&quot;</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>btnout<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                <span class="token keyword">else</span>
                    <span class="token keyword">case</span> qo <span class="token keyword">is</span> 
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0010&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0011&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--6</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11100000&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--7</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1000&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--8</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1001&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--9</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;00000000&quot;</span><span class="token punctuation">;</span>
                    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span> 
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;110&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111101&quot;</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>btnout<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                <span class="token keyword">else</span>
                    <span class="token keyword">case</span> qs <span class="token keyword">is</span> 
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0100&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0101&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0110&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--6</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0111&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--7</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--8</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--9</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;00000000&quot;</span><span class="token punctuation">;</span>
                    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span> 
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
            <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;111&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> cat_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>btnout<span class="token operator">=</span><span class="token number">&#39;1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">then</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                <span class="token keyword">else</span>
                    <span class="token keyword">case</span> qt <span class="token keyword">is</span> 
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span><span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span> <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0100&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0101&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0110&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--6</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;0111&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--7</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1000&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--8</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1001&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110110&quot;</span><span class="token punctuation">;</span> <span class="token comment">--9</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1010&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11111100&quot;</span><span class="token punctuation">;</span> <span class="token comment">--0</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1011&quot;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100000&quot;</span><span class="token punctuation">;</span> <span class="token comment">--1</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1100&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11011010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--2</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1101&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;11110010&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--3</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1110&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;01100110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--4</span>
                        <span class="token keyword">when</span> <span class="token vhdl-vectors number">&quot;1111&quot;</span><span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;10110110&quot;</span><span class="token punctuation">;</span>  <span class="token comment">--5</span>
                        <span class="token keyword">when</span> <span class="token keyword">others</span> <span class="token operator">=</span><span class="token operator">&gt;</span> seg_temp <span class="token operator">&lt;=</span> <span class="token vhdl-vectors number">&quot;00000000&quot;</span><span class="token punctuation">;</span>
                    <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span> 
                <span class="token keyword">end</span> <span class="token keyword">if</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span> <span class="token keyword">case</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span> <span class="token keyword">process</span> decode<span class="token punctuation">;</span>
    seg <span class="token operator">&lt;=</span> seg_temp<span class="token punctuation">;</span>
    cat <span class="token operator">&lt;=</span> cat_temp<span class="token punctuation">;</span>
    <span class="token comment">-- btnout_temp &lt;= btnout;</span>
    <span class="token comment">-- q &lt;= q_temp4;</span>
    <span class="token comment">-- clktmp &lt;= clk_2s;</span>
    <span class="token comment">-- numtmp &lt;= num4;</span>
<span class="token keyword">end</span> <span class="token keyword">architecture</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5DE5\u7A0B\u6587\u4EF6\u622A\u56FE" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u7A0B\u6587\u4EF6\u622A\u56FE" aria-hidden="true">#</a> \u5DE5\u7A0B\u6587\u4EF6\u622A\u56FE\uFF1A</h3><p><img src="`+u+'" alt="image-20220602225112266" loading="lazy"></p><p><img src="'+m+'" alt="image-20220602224938100" loading="lazy"></p><p><img src="'+k+'" alt="image-20220602225200053" loading="lazy"></p><p><img src="'+d+'" alt="image-20220602225226508" loading="lazy"></p><p><img src="'+v+'" alt="image-20220602225246364" loading="lazy"></p><p><img src="'+h+'" alt="image-20220602200631559" loading="lazy"></p><h2 id="\u4EFF\u771F\u6CE2\u5F62\u56FE\u53CA\u5206\u6790\u3001\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u4EFF\u771F\u6CE2\u5F62\u56FE\u53CA\u5206\u6790\u3001\u7ED3\u8BBA" aria-hidden="true">#</a> \u4EFF\u771F\u6CE2\u5F62\u56FE\u53CA\u5206\u6790\u3001\u7ED3\u8BBA</h2><p><img src="'+g+'" alt="image-20220602200815209" loading="lazy"></p><p><img src="'+b+'" alt="image-20220602202051320" loading="lazy"></p><p>\u4ECE\u4E0A\u56FE\u53EF\u4EE5\u770B\u51FA\uFF0C\u4F4D\u7801\u5927\u6982\u6BCF1ms\u5207\u6362\u4E00\u6B21\uFF0C\u6B63\u786E\u5B9E\u73B0\u4E86\u52A8\u6001\u626B\u63CF\u6570\u7801\u7BA1\u3002\u518D\u770B\u4F4D\u7801\uFF0C\u521D\u59CB\u663E\u793A&quot;20110000&quot;\uFF0C\u4E5F\u80FD\u6B63\u786E\u8BD1\u7801\u3002</p><p><img src="'+y+'" alt="image-20220602203300776" loading="lazy"></p><p>\u5C06\u65F6\u95F4\u8F74\u79FB\u52A8\u52302s\u5904\uFF0C\u5F97\u5230\u4E0A\u56FE\uFF0C\u53EF\u4EE5\u770B\u51FA2s\u540E\u540E\u4E09\u4F4D\u968F\u673A\u6570\u5DF2\u7ECF\u53D8\u5316\u3002</p><p>\u5982\u679C\u57281s\u5DE6\u53F3\u5904\u6309\u952E\u6309\u4E0B\uFF0C\u5982\u4E0B\u56FE\uFF1A</p><p><img src="'+w+'" alt="image-20220602203738759" loading="lazy"></p><p>\u4EFF\u771F\u540E\uFF1A</p><p><img src="'+q+'" alt="image-20220602204050164" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230\u6B64\u65F6\u5373\u4F7F\u65F6\u95F4\u6765\u52303s\u5DE6\u53F3\uFF0C\u968F\u673A\u6570\u4ECD\u4FDD\u6301\u201C000\u201D\uFF0C\u8BF4\u660E\u6309\u952E\u53EF\u4EE5\u5B9E\u73B0\u590D\u4F4D\uFF0C\u4E14\u590D\u4F4D\u4FDD\u63012s\u3002</p><h2 id="\u5B9E\u9A8C\u4E2D\u9047\u5230\u7684\u95EE\u9898\u53CA\u89E3\u51B3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9A8C\u4E2D\u9047\u5230\u7684\u95EE\u9898\u53CA\u89E3\u51B3\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u9A8C\u4E2D\u9047\u5230\u7684\u95EE\u9898\u53CA\u89E3\u51B3\u65B9\u6CD5</h2><h3 id="_1-vhdl\u7F16\u8BD1\u62A5\u9519" tabindex="-1"><a class="header-anchor" href="#_1-vhdl\u7F16\u8BD1\u62A5\u9519" aria-hidden="true">#</a> 1.vhdl\u7F16\u8BD1\u62A5\u9519</h3><p><strong>can&#39;t infer register for temp_temp[0] at D201GS10_RandomNumber.vhd(87) because it does not hold its value outside the clock edge</strong></p><p>\u65E0\u6CD5\u63A8\u65AD\u5BC4\u5B58\u5668\uFF0C\u56E0\u4E3A\u5B83\u7684\u503C\u4E0D\u5728\u65F6\u949F\u8FB9\u7F18\u4E4B\u5916.</p><p>\u9700\u8981\u6CE8\u610F\u51E0\u4E2A\u70B9\uFF1A</p><ul><li>\u5224\u65AD\u65F6\u949F\u4E0A\u5347\u6CBF\u7684if\u8BED\u53E5\uFF0C\u4E0D\u80FD\u643A\u5E26else\uFF1B</li><li>\u540C\u4E00\u4E2A\u4FE1\u53F7\u7684\u8D4B\u503C\u4E0D\u80FD\u51FA\u73B0\u5728\u591A\u4E2A\u8FDB\u7A0B\u91CC\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u91CC\u201C\u5199\u201D\uFF0C\u5176\u4ED6\u8FDB\u7A0B\u53EA\u80FD\u201C\u8BFB\u201D\uFF1B</li><li>\u6309\u952E\u6E05\u96F6\uFF08\u590D\u4F4D\uFF09\u5E94\u8BE5\u662F\u7535\u5E73\u89E6\u53D1\uFF0C\u800C\u4E0D\u662F\u8FB9\u6CBF\u89E6\u53D1\u3002</li></ul><h3 id="_2-\u4E0B\u8F7D\u5230\u5F00\u53D1\u677F\u4E0A\u65F6\u6570\u7801\u7BA1\u4E71\u7801" tabindex="-1"><a class="header-anchor" href="#_2-\u4E0B\u8F7D\u5230\u5F00\u53D1\u677F\u4E0A\u65F6\u6570\u7801\u7BA1\u4E71\u7801" aria-hidden="true">#</a> 2.\u4E0B\u8F7D\u5230\u5F00\u53D1\u677F\u4E0A\u65F6\u6570\u7801\u7BA1\u4E71\u7801</h3><p>\u5728\u68C0\u67E5\u81EA\u5DF1\u7684\u7A0B\u5E8F\u3001\u4EFF\u771F\u5206\u6790\u786E\u5B9A\u65E0\u8BEF\u540E\uFF0C\u6700\u540E\u53D1\u73B0\u6BB5\u7801\u7684\u5F15\u811A\u914D\u7F6E\u9519\u8BEF\u3002</p><p>\u6839\u636E\u5B9E\u9A8C\u677F\u8BF4\u660E\u4E66\uFF1A</p><p><img src="'+_+'" alt="image-20220602212130607" loading="lazy"></p><p>\u5982\u8981\u60F301100000\u8868\u793A\u201C1\u201D\uFF0C\u5219seg: abcdefgp\uFF0C\u53EA\u6709bc\u4EAE\uFF0C</p><p>seg[7] -&gt; a -&gt; PIN_62</p><p>seg[6] -&gt; b -&gt; PIN_59</p><p>...</p><p>\u6CE8\u610F\u5DE6\u8FB9\u8D77\u662F\u9AD8\u4F4D\uFF0C\u5982\u201C01100000\u201D\u4E2D\uFF0Cseg[7]=0,seg[6]=1,seg[5]=1.</p><p>\u6700\u540E\u7684\u914D\u7F6E\u5E94\u8BE5\u5982\u4E0B\uFF1A</p><p><img src="'+f+'" alt="image-20220602220550763" loading="lazy"></p><h3 id="_3-\u968F\u673A\u6570\u663E\u793A\u8BD1\u7801\u662F\u4E8C\u8FDB\u5236\u6570" tabindex="-1"><a class="header-anchor" href="#_3-\u968F\u673A\u6570\u663E\u793A\u8BD1\u7801\u662F\u4E8C\u8FDB\u5236\u6570" aria-hidden="true">#</a> 3.\u968F\u673A\u6570\u663E\u793A\u8BD1\u7801\u662F\u4E8C\u8FDB\u5236\u6570</h3><p>\u6CE8\u610F\u5E94\u8BD1\u7801\u6210\u5341\u8FDB\u5236\u6570\u3002</p><h3 id="_4-\u6BCF\u6B21\u6E05\u96F6\u540E\u7684\u663E\u793A\u90FD\u4E00\u6837" tabindex="-1"><a class="header-anchor" href="#_4-\u6BCF\u6B21\u6E05\u96F6\u540E\u7684\u663E\u793A\u90FD\u4E00\u6837" aria-hidden="true">#</a> 4.\u6BCF\u6B21\u6E05\u96F6\u540E\u7684\u663E\u793A\u90FD\u4E00\u6837</h3><p>\u6E05\u96F6\u4E0D\u8981\u6E05M\u5E8F\u5217\uFF0C\u53EA\u6E05\u663E\u793A\u3002M\u5E8F\u5217\u7684\u65F6\u949F\u7528\u9AD8\u9891\uFF0C\u6BCF2s\u8BFB\u53D6M\u5E8F\u5217\u7684\u7ED3\u679C\u53D6\u663E\u793A</p><h3 id="_5-\u6E05\u96F6\u540E\u663E\u793A\u7684\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u6301\u7EED\u65F6\u95F4\u4E0D\u662F2\u79D2" tabindex="-1"><a class="header-anchor" href="#_5-\u6E05\u96F6\u540E\u663E\u793A\u7684\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u6301\u7EED\u65F6\u95F4\u4E0D\u662F2\u79D2" aria-hidden="true">#</a> 5.\u6E05\u96F6\u540E\u663E\u793A\u7684\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u6301\u7EED\u65F6\u95F4\u4E0D\u662F2\u79D2</h3><p>\u6309\u952E\u590D\u4F4D\u65F6\uFF0C\u5206\u9891\u5668\u4E2D\u7684\u5206\u9891\u4FE1\u53F7\u4E5F\u5E94\u8BE5\u6E05\u96F6\u3002</p><h2 id="\u603B\u7ED3\u53CA\u611F\u60F3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3\u53CA\u611F\u60F3" aria-hidden="true">#</a> \u603B\u7ED3\u53CA\u611F\u60F3</h2><ul><li>\u8FD9\u6B21\u7684\u968F\u673A\u6570\u5B9E\u9A8C\u4E0D\u4EC5\u5DE9\u56FA\u4E86\u4E4B\u524D\u5B66\u4E60\u7684\u6570\u7801\u7BA1\uFF08\u52A8\u6001\u626B\u63CF\uFF09\u3001\u8BA1\u6570\u5668\u3001\u5206\u9891\u5668\uFF0C\u53C8\u7ED3\u5408\u4E0E\u5E94\u7528\u4E86\u65B0\u7684\u77E5\u8BC6\u70B9\uFF1AM\u5E8F\u5217\u53D1\u751F\u5668\u3002\u7ECF\u8FC7\u8FD9\u6B21\u5B9E\u9A8C\uFF0C\u6211\u5BF9\u4E4B\u524D\u5B66\u4E60\u7684\u7279\u522B\u662F\u6570\u7801\u7BA1\u7684\u52A8\u6001\u626B\u63CF\u6709\u4E86\u66F4\u6DF1\u7684\u7406\u89E3\u3002</li><li>\u8FD9\u6B21\u5B9E\u9A8C\u505A\u5F97\u8F83\u4E3A\u574E\u5777\uFF0C\u4E3B\u8981\u5728\u4E09\u4E2A\u5730\u65B9\uFF1A\u4E00\u662Fvhdl\u7F16\u8BD1\u62A5\u9519\uFF0C\u7EA0\u9519\u82B1\u8D39\u4E86\u5927\u91CF\u65F6\u95F4\uFF1B\u4E8C\u662F\u6570\u7801\u7BA1\u6BB5\u7801\u5F15\u811A\u914D\u7F6E\u987A\u5E8F\u76F8\u53CD\uFF0C\u5BFC\u81F4\u5B9E\u9A8C\u677F\u4E0A\u663E\u793A\u8BD1\u7801\u4E71\u7801\uFF0C\u82B1\u8D39\u4E86\u4E0D\u5C11\u65F6\u95F4\u5B9A\u4F4D\u5230\u8FD9\u4E2A\u9519\u8BEF\uFF1B\u4E09\u662F\u4F18\u5316\u7EC6\u8282\uFF0C\u5982\u6E05\u96F6\u65F6\u95F4\u8981\u4FDD\u63012s\u3001\u6E05\u96F6\u540E\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u4E0D\u80FD\u8DDF\u4E0A\u6B21\u76F8\u540C\u3001\u6E05\u96F6\u540E\u7B2C\u4E00\u7EC4\u968F\u673A\u6570\u4E5F\u8981\u4FDD\u63012s\u3002</li><li>\u521D\u5B66\u9636\u6BB5\uFF0C\u8001\u5E08\u3001\u540C\u5B66\u7684\u5E2E\u52A9\u5F88\u91CD\u8981\uFF0C\u6211\u4EEC\u8981\u5BF9\u6BCF\u4E00\u4E2A\u7ED9\u6211\u4EECdebug\u7684\u4EBA\u5FC3\u5B58\u611F\u6FC0\uFF1B\u5F53\u7136\u6211\u8BA4\u4E3A\u5FC5\u987B\u5728\u81EA\u5DF1\u5C1D\u8BD5\u3001\u6478\u7D22\u4E4B\u540E\u624D\u6709\u8D44\u683C\u60F3\u4ED6\u4EBA\u5BFB\u6C42\u5E2E\u52A9\u3002</li></ul>',46);function J(W,X){const a=c("Mermaid");return o(),l("div",null,[z,M,A,Q,E,t(a,{id:"mermaid-64a56faa",code:"flowchart%20LR%0A%20%20subgraph%20count8%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20clk%20--%3E%20count8%20--%3E%20out(%22q_temp%5B2...0%5D%22)%0A%20%20%0A"}),D,L,R,N,B,S,H,t(a,{id:"mermaid-64a56ef2",code:"flowchart%20LR%0A%20%20subgraph%20debouncing%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20btn%20--%3E%20debouncing%20--%3E%20btnout%0A%20%20clk%20--%3E%20debouncing%0A"}),C,t(a,{id:"mermaid-64a56928",code:"flowchart%20LR%0A%20%20subgraph%20divider2000%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20clk%20--%3E%20divider2000%20--%3E%20q(%22clk_2s%22)%0A"}),I,P,G,t(a,{id:"mermaid-64a568e0",code:"flowchart%20LR%0A%20%20subgraph%20RandomNumber%0A%20%20direction%20LR%0A%20%20%20%20x(%22some%20operation%22)%20%20--%3E%20...%20--%3E%20y(%22some%20operation%22)%0A%20%20end%0A%20%20clk%20--%3E%20RandomNumber%20--%3E%20q(%22q_temp%5B11...0%5D%22)%0A"}),K,V,O,t(a,{id:"mermaid-64a56862",code:"flowchart%20LR%0A%20%20subgraph%20transfer%0A%20%20direction%20LR%0A%20%20%20%20x(%22q_temp3%20%3C%3D%20q_temp%22)%20%0A%20%20end%0A%20%20clk_2s%20--%3E%20transfer%20--%3E%20q(%22q_temp3%5B11...0%5D%22)%0A"}),U,T,j,t(a,{id:"mermaid-64a56824",code:"flowchart%20LR%0A%20%20subgraph%20D201GS10_RANDOMNUMBER%0A%20%20%20%20direction%20LR%0A%20%20%20%20subgraph%20count8%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20debouncing%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20divider2000%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20transfer%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20RandomNumber%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20subgraph%20decode%0A%20%20%20%20%20%20%20%20direction%20LR%0A%20%20%20%20end%0A%20%20%20%20clk_0(%22clk%22)%20--%3E%20count8%20--%3E%20%7C%22q_temp2%5B2...0%5D%22%7C%20decode%0A%20%20%20%20clk_0%20--%3E%20debouncing%20--%3E%20%7Cbtnout%7C%20decode%0A%20%20%20%20btn_(%22btn%22)%20--%3E%20debouncing%0A%20%20%20%20clk_0%20--%3E%20divider2000%20--%3E%20%7Cclk_2s%7C%20transfer%20--%3E%20%7C%22t_temp3%5B11...0%5D%22%7C%20decode%0A%20%20%20%20clk_0%20--%3E%20RandomNumber%20--%3E%7C%22q_temp%5B11...0%5D%22%7C%20transfer%0A%20%20end%0A%20%20clk%20---%3E%20D201GS10_RANDOMNUMBER%20---%3E%20seg(%22seg%5B7..0%5D%22)%0A%20%20btn%20---%3E%20D201GS10_RANDOMNUMBER%20---%3E%20cat(%22cat%5B7..0%5D%22)%0A%20%20%0A"}),F])}const $=p(x,[["render",J],["__file","\u968F\u673A\u6570\u751F\u6210\u53CA\u663E\u793A\u7535\u8DEF\u7684\u8BBE\u8BA1\u4E0E\u5B9E\u73B0.html.vue"]]);export{$ as default};
